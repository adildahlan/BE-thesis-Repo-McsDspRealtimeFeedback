<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" dir="ltr" lang="en"><head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<meta http-equiv="Content-Style-Type" content="text/css">
		<meta name="generator" content="MediaWiki 1.15.5-1~bpo50+1">
		<meta name="robots" content="noindex,follow">
		<meta name="keywords" content="MEA2100 User Guide">
		<link rel="alternate" type="application/x-wiki" title="Edit" href="http://wiki.mcs.de.com/wiki/index.php?title=MEA2100_User_Guide&amp;action=edit">
		<link rel="edit" title="Edit" href="http://wiki.mcs.de.com/wiki/index.php?title=MEA2100_User_Guide&amp;action=edit">
		<link rel="shortcut icon" href="http://wiki.mcs.de.com/favicon.ico">
		<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.mcs.de.com/wiki/opensearch_desc.php" title="McsWiki (en)">
		<link rel="alternate" type="application/rss+xml" title="McsWiki RSS feed" href="http://wiki.mcs.de.com/wiki/index.php?title=Special:RecentChanges&amp;feed=rss">
		<link rel="alternate" type="application/atom+xml" title="McsWiki Atom feed" href="http://wiki.mcs.de.com/wiki/index.php?title=Special:RecentChanges&amp;feed=atom">
		<title>MEA2100 User Guide - McsWiki</title>
		<link rel="stylesheet" href="MEA2100_User_Guide-Dateien/commonPrint.css" type="text/css">
		<link rel="stylesheet" href="MEA2100_User_Guide-Dateien/index.css" type="text/css">
		<link rel="stylesheet" href="MEA2100_User_Guide-Dateien/index_003.css" type="text/css">
		<link rel="stylesheet" href="MEA2100_User_Guide-Dateien/index_002.css" type="text/css">
		<link rel="stylesheet" href="MEA2100_User_Guide-Dateien/index_004.css" type="text/css">
		<!--[if lt IE 7]><script type="text/javascript" src="/wiki/skins/common/IEFixes.js?207"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->

		<script type="text/javascript">/*<![CDATA[*/
		var skin = "monobook";
		var stylepath = "/wiki/skins";
		var wgArticlePath = "/wiki/index.php/$1";
		var wgScriptPath = "/wiki";
		var wgScript = "/wiki/index.php";
		var wgVariantArticlePath = false;
		var wgActionPaths = {};
		var wgServer = "http://wiki.mcs.de.com";
		var wgCanonicalNamespace = "";
		var wgCanonicalSpecialPageName = false;
		var wgNamespaceNumber = 0;
		var wgPageName = "MEA2100_User_Guide";
		var wgTitle = "MEA2100 User Guide";
		var wgAction = "view";
		var wgArticleId = "2046";
		var wgIsArticle = true;
		var wgUserName = null;
		var wgUserGroups = null;
		var wgUserLanguage = "en";
		var wgContentLanguage = "en";
		var wgBreakFrames = false;
		var wgCurRevisionId = 11149;
		var wgVersion = "1.15.5-1~bpo50+1";
		var wgEnableAPI = true;
		var wgEnableWriteAPI = true;
		var wgSeparatorTransformTable = ["", ""];
		var wgDigitTransformTable = ["", ""];
		var wgRestrictionEdit = [];
		var wgRestrictionMove = [];
		/*]]>*/</script>

		<script type="text/javascript" src="MEA2100_User_Guide-Dateien/wikibits.js"><!-- wikibits js --></script>
		<!-- Head Scripts -->
		<script type="text/javascript" src="MEA2100_User_Guide-Dateien/ajax.js"></script>
		<style type="text/css">/*<![CDATA[*/
li#ca-latex {margin-left:1.6em;}
div.w2l-debug {
	border:1px solid black;
	padding:1em;
}
/*]]>*/</style>
		<script type="text/javascript" src="MEA2100_User_Guide-Dateien/index.php"><!-- site js --></script>
	</head>
<body class="mediawiki ltr ns-0 ns-subject page-MEA2100_User_Guide skin-monobook">
	<div id="globalWrapper">
		<div id="column-content">
	<div id="content">
		<a name="top" id="top"></a>
				<h1 id="firstHeading" class="firstHeading">MEA2100 User Guide</h1>
		<div id="bodyContent">
			<h3 id="siteSub">From McsWiki</h3>
			<div id="contentSub"></div>
									<div id="jump-to-nav">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>			<!-- start content -->
			<table id="toc" class="toc" summary="Contents"><tbody><tr><td><div id="toctitle"><h2>Contents</h2> <span class="toctoggle">[<a href="javascript:toggleToc()" class="internal" id="togglelink">hide</a>]</span></div>
<ul>
<li class="toclevel-1"><a href="#Introduction"><span class="tocnumber">1</span> <span class="toctext">Introduction</span></a>
<ul>
<li class="toclevel-2"><a href="#System_Overview"><span class="tocnumber">1.1</span> <span class="toctext">System Overview</span></a></li>
<li class="toclevel-2"><a href="#Getting_Started"><span class="tocnumber">1.2</span> <span class="toctext">Getting Started</span></a></li>
<li class="toclevel-2"><a href="#DSP"><span class="tocnumber">1.3</span> <span class="toctext">DSP</span></a>
<ul>
<li class="toclevel-3"><a href="#Data_Aquisition"><span class="tocnumber">1.3.1</span> <span class="toctext">Data Aquisition</span></a>
<ul>
<li class="toclevel-4"><a href="#General_Overview"><span class="tocnumber">1.3.1.1</span> <span class="toctext">General Overview</span></a></li>
<li class="toclevel-4"><a href="#DSP_Reception_of_Sweep_and_Digital_data"><span class="tocnumber">1.3.1.2</span> <span class="toctext">DSP Reception of Sweep and Digital data</span></a></li>
</ul>
</li>
<li class="toclevel-3"><a href="#Stimulation"><span class="tocnumber">1.3.2</span> <span class="toctext">Stimulation</span></a>
<ul>
<li class="toclevel-4"><a href="#General_Overview_2"><span class="tocnumber">1.3.2.1</span> <span class="toctext">General Overview</span></a></li>
<li class="toclevel-4"><a href="#Stimulus_Pattern_Upload"><span class="tocnumber">1.3.2.2</span> <span class="toctext">Stimulus Pattern Upload</span></a>
<ul>
<li class="toclevel-5"><a href="#DAC_Units"><span class="tocnumber">1.3.2.2.1</span> <span class="toctext">DAC Units</span></a></li>
<li class="toclevel-5"><a href="#Sideband_Data"><span class="tocnumber">1.3.2.2.2</span> <span class="toctext">Sideband Data</span></a></li>
</ul>
</li>
<li class="toclevel-4"><a href="#Electrode_Configuration"><span class="tocnumber">1.3.2.3</span> <span class="toctext">Electrode Configuration</span></a>
<ul>
<li class="toclevel-5"><a href="#Electrode_setup_advice"><span class="tocnumber">1.3.2.3.1</span> <span class="toctext">Electrode setup advice</span></a></li>
<li class="toclevel-5"><a href="#Stimulus_channel_setup_advice"><span class="tocnumber">1.3.2.3.2</span> <span class="toctext">Stimulus channel setup advice</span></a></li>
<li class="toclevel-5"><a href="#List_mode_for_advanced_stimulation"><span class="tocnumber">1.3.2.3.3</span> <span class="toctext">List mode for advanced stimulation</span></a></li>
</ul>
</li>
<li class="toclevel-4"><a href="#Standard_Trigger"><span class="tocnumber">1.3.2.4</span> <span class="toctext">Standard Trigger</span></a>
<ul>
<li class="toclevel-5"><a href="#Standard_Trigger_Setup"><span class="tocnumber">1.3.2.4.1</span> <span class="toctext">Standard Trigger Setup</span></a></li>
<li class="toclevel-5"><a href="#Start_Trigger"><span class="tocnumber">1.3.2.4.2</span> <span class="toctext">Start Trigger</span></a></li>
</ul>
</li>
<li class="toclevel-4"><a href="#Direct_Streaming_Mode_triggered_by_SW"><span class="tocnumber">1.3.2.5</span> <span class="toctext">Direct Streaming Mode triggered by SW</span></a>
<ul>
<li class="toclevel-5"><a href="#Direct_Steaming_Trigger_Setup"><span class="tocnumber">1.3.2.5.1</span> <span class="toctext">Direct Steaming Trigger Setup</span></a></li>
<li class="toclevel-5"><a href="#Direct_Steaming_Data_path_Setup"><span class="tocnumber">1.3.2.5.2</span> <span class="toctext">Direct Steaming Data path Setup</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-3"><a href="#Digital_Multiplexer"><span class="tocnumber">1.3.3</span> <span class="toctext">Digital Multiplexer</span></a></li>
<li class="toclevel-3"><a href="#Using_McsUsbUpdate_to_review_configuration"><span class="tocnumber">1.3.4</span> <span class="toctext">Using McsUsbUpdate to review configuration</span></a></li>
</ul>
</li>
</ul>
</li>
<li class="toclevel-1"><a href="#Data_Format_for_.3E_16_bit"><span class="tocnumber">2</span> <span class="toctext">Data Format for &gt; 16 bit</span></a></li>
<li class="toclevel-1"><a href="#Register_Interface"><span class="tocnumber">3</span> <span class="toctext">Register Interface</span></a>
<ul>
<li class="toclevel-2"><a href="#Address_Map_.28Address_bits_15-12_determine_the_subcomponet.29"><span class="tocnumber">3.1</span> <span class="toctext">Address Map (Address bits 15-12 determine the subcomponet)</span></a></li>
<li class="toclevel-2"><a href="#Interface_Board_Address_Map_.28Address_bits_11-0.29:"><span class="tocnumber">3.2</span> <span class="toctext">Interface Board Address Map (Address bits 11-0):</span></a></li>
<li class="toclevel-2"><a href="#Digital_Signal_Processor_Address_Map_.28Address_bits_11-0.29:"><span class="tocnumber">3.3</span> <span class="toctext">Digital Signal Processor Address Map (Address bits 11-0):</span></a></li>
<li class="toclevel-2"><a href="#Headstage_Board_Address_Map_.28Address_bits_11-0.29:"><span class="tocnumber">3.4</span> <span class="toctext">Headstage Board Address Map (Address bits 11-0):</span></a></li>
<li class="toclevel-2"><a href="#Stimulus_Board_Address_Map_.28Address_bits_11-0.29:"><span class="tocnumber">3.5</span> <span class="toctext">Stimulus Board Address Map (Address bits 11-0):</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#HS_.3C-.3E_STG_interconection_.28bits_32-0.29"><span class="tocnumber">4</span> <span class="toctext">HS &lt;-&gt; STG interconection (bits 32-0)</span></a></li>
</ul>
</td></tr></tbody></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="Introduction" id="Introduction"></a><h1> <span class="mw-headline"> Introduction </span></h1>
<a name="System_Overview" id="System_Overview"></a><h2> <span class="mw-headline"> System Overview </span></h2>
<p>The MEA2100 system consists of an interface board and one or two headstages.
</p><p>The interface bord consists of:
</p>
<ul><li> Two USB connectors for PC connection
</li><li> Two ports for one or two headstages
</li><li> 16 digital input and 16 output ports for triggering
</li><li> Eight additional analog inputs for monitoring
</li><li> DSP debug port
</li><li> Audio out
</li><li> A DSP
<ul><li> Who has access to the measured data stream for additional promt data calculation
</li><li> Optional Stimulation control
</li></ul>
</li></ul>
<p>The DSP can be programmed by the user, for example to do real-time 
signal analyses and programm feedback via the stimulation channels. A 
debug port is provided at the same connector as the analog inputs.
</p>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MEA2100_Overview.png" class="image" title="System Overview"><img alt="System Overview" src="MEA2100_User_Guide-Dateien/800px-MEA2100_Overview.png" border="0" height="232" width="800"></a></div></div>
<p>The headstage consists of:
</p>
<ul><li> Adapters for different MEAs (see options below)
<ul><li> Electronic for measurement
</li><li> Stimulation of up to 120 electrodes
</li></ul>
</li></ul>
<p>The headstages connect to an interface board.
</p><p>The overview about HS options: 
</p>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MEA2100_OverviewDetail.png" class="image" title="Headstage Options"><img alt="Headstage Options" src="MEA2100_User_Guide-Dateien/800px-MEA2100_OverviewDetail.png" border="0" height="318" width="800"></a></div></div>
<a name="Getting_Started" id="Getting_Started"></a><h2> <span class="mw-headline"> Getting Started </span></h2>
<p>To write code for the DSP, the following tools are needed:
</p>
<ul><li> Code Composer Studio from Texas Instruments, which is the C compiler for the DSP <a href="http://processors.wiki.ti.com/index.php/Category:Code_Composer_Studio_v4" class="external autonumber" title="http://processors.wiki.ti.com/index.php/Category:Code_Composer_Studio_v4" rel="nofollow">[1]</a>
<ul><li> Documentation for this compiler: <a href="http://www.ti.com/lit/ug/spru187o/spru187o.pdf" class="external autonumber" title="http://www.ti.com/lit/ug/spru187o/spru187o.pdf" rel="nofollow">[2]</a>
</li></ul>
</li><li> 6455_default_package.zip to c:\ti\csl\TMS320C6454\default_package
</li><li> ActivePython <a href="http://www.activestate.com/activepython/downloads" class="external autonumber" title="http://www.activestate.com/activepython/downloads" rel="nofollow">[3]</a>
</li><li> Visual Studio 2010, there is a free Express Edition available from Microsoft <a href="http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-csharp-express" class="external autonumber" title="http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-csharp-express" rel="nofollow">[4]</a>
</li><li> A Blackhawk XDS560v2 System Trace Emulator is of great help to debug DSP code <a href="http://www.blackhawk-dsp.com/products/XDS560v2.aspx" class="external autonumber" title="http://www.blackhawk-dsp.com/products/XDS560v2.aspx" rel="nofollow">[5]</a>. The part number is BH-XDS-560v2-BP. A reseller for US is <a href="http://www.corelis.com/products-blackhawk/XDS560_Trace_System.htm" class="external text" title="http://www.corelis.com/products-blackhawk/XDS560_Trace_System.htm" rel="nofollow">http://www.corelis.com</a>
</li></ul>
<a name="DSP" id="DSP"></a><h2> <span class="mw-headline"> DSP </span></h2>
<p>The default setup of the system routes the data without DSP interaction from HS 1 to USB A and from HS2 to USB B Port.
In this case the DSP is only able to monitor the sweep data.
</p>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MEA2100_DataStream_noDSP.png" class="image" title="MEA2100 DataStream noDSP.png"><img alt="" src="MEA2100_User_Guide-Dateien/800px-MEA2100_DataStream_noDSP.png" border="0" height="277" width="800"></a></div></div>
<p>The DSP can be programmed with user code to access the data stream 
from the headstages and the onboard ADCs of the interface board. The 
datastream can be send to the USB ports towards the PC. The DSP can also
 configure all parts of the MEA2100-System, including stimulation and 
trigger, exept the USB data stream configuration to the PC. By this a 
realtime feedback with low latency can be build.
</p>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MEA2100_DataStream_withDSP.png" class="image" title="MEA2100 DataStream withDSP.png"><img alt="" src="MEA2100_User_Guide-Dateien/800px-MEA2100_DataStream_withDSP.png" border="0" height="277" width="800"></a></div></div>
<p>The DSP used in the MEA2100 system is a <a href="http://www.ti.com/product/tms320c6454" class="external text" title="http://www.ti.com/product/tms320c6454" rel="nofollow">TMS320C6454</a>
 from Texas Instruments running at 819.2 MHz. He has access to the 
MEA2100 system via its external memory interface (EMIF).  Access to the 
system is via three parts.
</p>
<ul><li> The Configuration of the MEA2100 is done with the register 
based interface. Therefore the DSP has the MEA addreses mapped into the 
range from 0xA0000000 to 0xAFFFFFFF. The different components of the 
MEA2100 use each a subrange of this address region.<a href="#Register_Map" title="">#Register Map</a> In the FB_Example Project, <tt>MEA21_init.h</tt> defines Macros which can be useed to access these registers:
</li></ul>
<pre>#define READ_REGISTER(reg)           MEA21_REGISTER(reg) 
#define WRITE_REGISTER(reg, value)   MEA21_REGISTER(reg) = value
</pre>
<ul><li> Sweep and Digital data is transfered via a fifo-type interface, mapped into the DSP address range starting from 0xB0000000.
</li></ul>
<ul><li> One of two options of controling the stimulation is the direct 
streaming mode. This can be done via the streaming port using address 
0xC0000000.
</li></ul>
<a name="Data_Aquisition" id="Data_Aquisition"></a><h3> <span class="mw-headline"> Data Aquisition </span></h3>
<a name="General_Overview" id="General_Overview"></a><h4> <span class="mw-headline"> General Overview </span></h4>
<p>The MEA2100 System can measure analog signals from 120 electrodes per Headstage at 50kHz with 24bit resolution.<br>
On the interface board are 8 additional analog inputs for monitoring purposes(also 50kHz and 24bit resolution).<br>
Additional to the analog signals are several digital signals(<a href="#DSP_in_Data" title="">configurable DSP in data</a>).<br>
</p>
<a name="DSP_Reception_of_Sweep_and_Digital_data" id="DSP_Reception_of_Sweep_and_Digital_data"></a><h4> <span class="mw-headline"> DSP Reception of Sweep and Digital data </span></h4>
<p>Sweep and Digital Data is available to the DSP through a FIFO type 
interface mapped to the address 0xB0000000 in the DSP memory map.
</p><p>Each time (once every 20 us), when the MEA2100 has a new sweep of
 data available from the Datasources, the signal line (GPIO4) to the DSP
 will be toggled (enabled in Interconnection Logic). After the DSP has 
received this signal, it can read the new sweep data either by multiple 
reads from address 0xB0000000, or the more convenient way is to set up a
 DMA transfer which automatically transfers all data from the sweep into
 DSP memory. After the transfer is complete, a DMA completion interrupt 
can be called.
</p><p>The example code in the FB_Example project initializes and 
enables such a DMA transfer. In the example, each time after a new sweep
 of MEA2100 is avaible in DSP memory, the function <tt>interrupt6()</tt> is called. The new data is available to the user in the array <tt>MeaData[]</tt>. The data in this <tt>MeaData[]</tt> array automatically updates every 20 us when the DMA is running.
</p><p>The setup and initialisation of the DMA is done in the <tt>init_dma()</tt> function in <tt>MEA21_init.c</tt>. 
Once it is up and running, it does the transfers automatic without CPU intervention, so no loose of CPU time in this mode.
</p><p>One important Register for the readout of data is Register 0x400.
 This register controls which kind of data is transfered into the FIFO 
from MEA2100 to the DSP. It can enable data from Headstage 1, Headstage 
2, or from the ADCs on the Interface board and some other helpfull data.
</p><p>The line 94 of <tt>main.c</tt>
</p>
<pre>WRITE_REGISTER(DspIndataCtrl, DSPINDATACTRL_VALUE);  // Enable Irq and HS1 Data
</pre>
<p>enables the data transfer from the FPGA to the FIFO towards the DSP.
</p><p>The ADC Data blocks have the format
</p>
<pre>HS1               122 datawords (Header, 120 Data, Counter)
HS2               122 datawords (Header, 120 Data, Counter)
IF                  9 datawords (Header,   8 Data)
HS1 Filtered Data 122 datawords (Header, 120 Data, Counter)
HS2 Filtered Data 122 datawords (Header, 120 Data, Counter)
</pre>
<p>which means, when you have enabled data from Headstage 1 (HS1), you 
will get 122 32-bit Datawords per sweep, where the first dataword is a 
header word, followed by 120 32-bit datawords of ADC data (Format is 
signed, the ADCs have 24 bit resolution), followed by a 32-bit counter 
which enumerates the sweep.
</p><p>So, when data from Headstage 1 is enabled there will be at <tt>MeaData[0]</tt> the header, at <tt>MeaData[1]</tt> the data from the first ADC (MEA Hardware Channel Nr. 1) and so on.
</p><p>The pointers in the <tt>irq.c</tt> example are intended to help 
to access the ADC data, HS1_DATA_OFFSET is defined to 1, because this is
 the location of the data from the first data channel.
</p>
<pre>Int32* restrict HS1_Data_p = (Int32 *)&amp;MeaData[HS1_DATA_OFFSET];
</pre>
<p><tt>HS1_Data_p</tt> is a pointer to the location within <tt>MeaData</tt>
 where the ADC data is located. When the code in the DSP needs to do 
some calculation on the sweep data, the data of interest should be 
copyed to a memory location under its control. You always need to 
remember that <tt>MeaData</tt> will be changed as soon as new sweep data is transfered by the DMA.
</p><p>The Digital Data blocks have the format
</p>
<pre>Digital Data 28 datawords (Header, 27 Data)
Timestamp    3  datawords (Header,  2 Data)
</pre>
<a name="Stimulation" id="Stimulation"></a><h3> <span class="mw-headline"> Stimulation </span></h3>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MEA2100_StimulationBlanking.png" class="image" title="MEA2100 StimulationBlanking.png"><img alt="" src="MEA2100_User_Guide-Dateien/800px-MEA2100_StimulationBlanking.png" border="0" height="518" width="800"></a></div></div>
<p><br>
</p>
<a name="General_Overview_2" id="General_Overview_2"></a><h4> <span class="mw-headline"> General Overview </span></h4>
<p>Each headstage, which can measure from and stimulate up to 120 
electrodes has two seperate modules (STG 1 and STG 2) for the 
stimulation. The first module is in control of electrode channels 1 to 
60, the second module for electrode channels 61 to 120. Each of the two 
modules has access to three DAC pairs and three sideband channels.
</p><p>There are two options of controling the stimulation in the modules:
</p>
<ul><li><a href="#STG_Configuration" title="">Configure Stimulus-Generator modules</a>
</li><li><a href="#Direct_Streaming_Configuration" title="">Direct streaming mode from DSP via streaming port</a>
</li></ul>
<p>Within each module, the three DAC pairs and three sideband channels can be arbitrary controlled by three trigger statemachines.<br>
These statemachines handle the stimulus pattern read out units (DAC/SBS) to whom they are assigned to (reg:<a href="#DAC_Registers" title="">0x104-0x108</a>).
The
 stimulus pattern is stored in onboard memory on the MEA2100 headstage 
where each module has its own independent memory. For the stimulation 
(DAC/SBS) the memory is organized in segments and blocks to support the 
stimulus with different stimulus pattern lists, to enable quick 
switching between lists of prepared patterns. The DACs update their 
output value every 20 us, resulting in an output rate of 50 kHz. 
Corresponding for the analog patterns, additional information is stored 
in memory regions called sidebands. These sideband data contain digital 
information for controling the switches and muxes to enable stimulation.
 The update of this data is also every 20 us.
</p>
<ul><li> The electrical parameters are:
<ul><li> Voltage Mode: Range: +- 12 V, Resolution: 0.571 mV / digit (571 uV/digit) 
</li><li> Current Mode: Range: +- 1.5 mA, Resolution: 0.05 uA / digit (50 nA/digit)
</li></ul>
</li></ul>
<div id="STG_Configuration"></div>
<p>The configuration of the Stimulus Generator consists of three parts:
</p>
<ul><li><a href="#Stimulus_Pattern_Upload" title="">The stimulus pattern upload</a>
</li><li><a href="#Electrode_Configuration" title="">The electrode configuration</a>
</li><li><a href="#Trigger" title="">The trigger setup</a>
</li></ul>
<div id="Direct_Streaming_Configuration"></div>
<p>The configuration of the Direct Streaming mode can be done in two ways:
</p>
<ul><li><a href="#Direct_Streaming_Trigger_by_SW" title="">When controled by Computer SW via DSP</a>
</li><li><a href="http://wiki.mcs.de.com/wiki/index.php/" title="">When fully controled by DSP</a>
</li></ul>
<a name="Stimulus_Pattern_Upload" id="Stimulus_Pattern_Upload"></a><h4> <span class="mw-headline"> Stimulus Pattern Upload </span></h4>
<div id="Stimulus_Pattern_Upload"></div>
<p>There are eigth stimulus pattern read out units to read the stimulus 
pattern from the assigned memory block and support the data to the 
stimulation logic. In the default configuration, only six units are in 
use, where three support the data for the DAC pairs and three for the 
sideband signals.
</p><p>Setup:
Before the patterns can be uploaded into memory, the available 256 MByte
 of memory need to be devided in blocks and segments. These blocks and 
segments need to be assigned to the eigth units. One option is to divide
 all available memory into eigth blocks and ONE segment. A more advanced
 option is to subdivide the total memory into 256 segments, and then 
subdivide the memory within each of these segments into the eigth 
blocks. This mode, called the segmented mode, allows to predefine and 
upload up to 256 independant stimulation patterns and quickly select 
amoung them within microseconds. The mode will be selected by a write to
 Memory Control Register (<a href="#Memory_Registers" title="">0x200</a>)
 on each of the STG subsystems. Setting bit 28 one segment will be set 
up automaticaly. Setting bit 29 the memory is subdivided into 256 
segments with interal logic.
</p><p>Alternatively the size of each block and each segment can be 
subdivided individual with the needed amount of memory. This is 
controlled by the registers <a href="#Memory_Registers" title="">0x200 to 0x2f0</a>
 and need to be done manualy. There the start pointer for each of the 
memory blocks need to be inserted. For example the memory block for DAC A
 and B (default setting of Register 0x1D0) is controlled by the <a href="#Memory_Registers" title="">registers 0x200 to 0x210</a>.
Register <a href="#Memory_Registers" title="">0x200</a> is used to select a segment, and then the start address for this block in the selected segment is set via <a href="#Memory_Registers" title="">registers 0x204</a>. In default Segment 0 is used. 
When segmented mode is chosen another segment is selected via register <a href="#Memory_Registers" title="">0x200</a>.
 Again the start address of the selected block is set via register 
0x204. So register 0x200 selects the segment to be defined/modified and 
then the other registers reflect the corresponding block start pointer 
of the segment.
</p><p><br>
</p>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:Memmory_Layout.png" class="image" title="Memory Layout options"><img alt="Memory Layout options" src="MEA2100_User_Guide-Dateien/400px-Memmory_Layout.png" border="0" height="560" width="400"></a></div></div>
<p><br>
After the intendet memory layout is set up, each of the DAC and sideband
 memory blocks can be filled with data. Data is written to the blocks in
 a FIFO type mode via the Write DAC and Write SBS Data Registers (<a href="#Memory_Access" title="">0xF20-0xF3C</a>).
 Each write to one of these registers appends one 32bit data word to the
 corresponding block in the selected segment. When a data word is 
written to the Data Registers at address from <a href="#Memory_Access" title="">0xF40 to 0xF54</a>, the pointer of the corresponding block is first set to Start. The segment will be changed as well in <a href="#Memory_Registers" title="">Register 0x200 (0x220,0x240,...,0x2E0)</a>.
If the number of vectors for a stimulus pattern is more than the memory 
space allocated for one block, no hardware will limit the write to the 
memory (overlapping pattern memory). So the data of an other block will 
be overwriten! This will lead to unpredictable behavior during 
operation!
</p><p>The 32 bit data word is described in <a href="#Data_Vector_decoding" title="">Data Vector decoding</a>.
</p><p>The data vector (000) is either a value with a 16 bit amplitude 
for DACs or 16 bit Sideband Signal value for Sideband Channels.
Bit 26 defines the timebase of this vector. A '0' defines that the value
 will be valid for one 20 us frame until the number of repeats (bits 
25-16) will be decreased by one. If bit 26 is '1' the value will be 
valid for 1000 times 20 us until the decrement will be done.
</p><p>Two kind of loops can be used. A single vector loop (001) and a 
long loop vector (010 in combination with 011) with two vectors keeping 
the information. For both types of loops the "number of repeats" are one
 based. Whereby a 0x1 will lead to ignore the vector and a 0x2 will 
repeat once. A value of 0x0 means to loop forever!
The address offset is also one based. A 0x1 will jump backward one 
vector before the loop vectors.
So nested loops for repetition of (sub-)blocks of data can be created. 
This avoids to store one stimulus multiple times.
</p>
<a name="DAC_Units" id="DAC_Units"></a><h5> <span class="mw-headline"> DAC Units </span></h5>
<p>The stimulation module for the 60 electrode channels is subdivided in
 two halfs of 30 electrodes, where each half has its own set of three 
DACs. In default configuration these six DACs are combined into three 
DAC pairs, so that it looks like that there are three DACs available for
 each of the 60 electrodes.
</p><p>For advanced applications, these DAC pairs can be broken up, 
allowing stimulation with three DACs available for each block of 30 
electrodes. The DACs which are available to the lower 30 electrodes in a
 module are named DAC A, C and E, the DACs which are available to the 
upper 30 electrodes in a module are named DAC B, D and F.
</p><p>In default configuration, DAC A and B form the DAC AB pair, 
likewise DAC C and D form the DAC CD pair, and DAC E and F form the DAC 
EF pair, making it look like there are three DACs named AB, CD and EF. 
Both DACs out of a DAC pair take their data out of the same memory 
block, thus always have the same analog output.
</p><p>The DAC pairs are broken up by assigning each DAC to its own 
stimulus pattern read out unit of the available eigth stimulus pattern 
supporting units. When all six DACS are to be used individually there 
are two units left to be shared among the three sidebands.
The register which controls the DAC to stimulus pattern read out units 
is <a href="#DAC_Registers" title="">0x1D0</a>. For Sideband configuration it is register <a href="#DAC_Registers" title="">0x1D4</a>.
</p>
<a name="Sideband_Data" id="Sideband_Data"></a><h5> <span class="mw-headline"> Sideband Data </span></h5>
<p>A Sideband has two functions:
</p>
<ul><li> These <a href="#Sideband_Signals" title="">Sideband Signals</a>
 (SBS) control the switches which connect the Stimulation DACs to the 
electrode and it controls the Amplifier Protection("Blanking") of ADC 
data while a Stimulus pulse is active. Each function is assigned to a 
bit in the 16 bit wide data stream:
<ul><li> Bit 0: Amplifier Protection Switch on Headstage/Blanking
</li><li> Bit 3: Stimulation Switch Close
</li><li> Bit 4: Stimulus Selector Enable
</li><li> Bit 8: List Mode config ID increment on/to the Interface Board
 or Bit 15-8 List Mode config ID when source of ID is switched to SB 
bits
</li></ul>
</li><li> It can be used to send data to the USB, to the DSP or to the 
digital outputs on the Interfaceboard which are synchronous to the 
running stimulation.
</li></ul>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MEA2100_Blanking.png" class="image" title="Stimulus Example"><img alt="Stimulus Example" src="MEA2100_User_Guide-Dateien/600px-MEA2100_Blanking.png" border="0" height="416" width="600"></a></div></div>
<p>The diagram shows an example stimulus pattern together with the 
sideband datastream. As shown in the drawing, the Stimulation Switch can
 open with the end of the Stimulus. The Blanking signal should stay 
active for some additional time te, recommendations are 20 us for 
Voltage Stimulation and 20 us for Current Stimulation. Likewise, the 
Stimulation Selector should be kept for some additional time te, here 
the recommendation is 20 us for Voltage Stimulation and 20 us for 
Current Stimulation.
</p>
<a name="Electrode_Configuration" id="Electrode_Configuration"></a><h4> <span class="mw-headline"> Electrode Configuration </span></h4>
<div id="Electrode_Configuration"></div>
<p>To configure an eletrode for stimulation, each of the 120 electrodes 
has to be either assigned to one of the three DACs within its STG 
subsystem, or it can be in an "inactive" configuration. This is 
controlled by register <a href="#DAC_Registers" title="">0x160-0x16C</a>,
 the Electrode DAC Multiplexer assignment Register. These registers sets
 the Stimulus selectors to one of the four inputs. Two bits for each 
electrode either configure the electrode to be stimulated to DAC A/B, 
C/D or E/F. The bit pattern "00" configures the selector into an 
"inactive" mode, in which it is configured to fixed ground.
</p><p>Behind the multiplexer, the Stimulation Enable switch connects 
the DAC selector output with the electrode. This will be configured in 
register <a href="#DAC_Registers" title="">0x158-0x15C</a>.
</p><p>For Testing or for Measurement electrodes, each electrode can be 
set in "manual" mode. With this the DAC Multiplexer and the Stimulation 
Enable switch are set imidiatly in the state which is defined by 
register <a href="#DAC_Registers" title="">0x160-0x16C</a> for the DAC settings and <a href="#DAC_Registers" title="">0x158-0x15C</a>
 for the Stimulation Enable. During stimulation, when the system should 
be controled by the sidband signals, the corresponding stimulation 
electrode needs to be set into dynamic (automatic) mode (register <a href="#DAC_Registers" title="">0x120-0x12C</a>).
</p><p>In default setup the sideband 1 is assigned to DAC A/B, sideband 2
 is assigned to DAC C/D and sideband 3 is assigned to DAC E/F. For 
advanced setup these defaults can be changed in register <a href="#DAC_Registers" title="">0x154</a>.
For example all DACs can have assigned sideband 1 to it.
</p><p>When an electrode is in automatic mode assigned to one of the 
three DACs, the DAC Select and Stimulation Enable register do not 
directly configure the state of the switches. Only when the Sideband 
datastream is running, the corresponding SBS vector to the current DAC 
vector determine the state of the switches. The default state, which is 
used when the sideband is not running or when the corresponding bit in 
the sideband datastream is zero, is for the Multiplexer to use its 
ground connected pin to be selected and the Elektrode Enable Switch is 
open. The default state of the switches, which is used when the signal 
from the electrodes is measured, is shown in blue in the schematic 
overview above.
The sideband is a 16 bit wide data stream. Bit 0 of this data stream 
controls the Amplifier Protection Switch and the Blanking, Bit 3 
controls the Stimulation Switch and Bit 4 is in control of the Stimulus 
Selector.
</p>
<a name="Electrode_setup_advice" id="Electrode_setup_advice"></a><h5> <span class="mw-headline"> Electrode setup advice </span></h5>
<ul><li> Decide wether your electrode is used as stimulation or measurement electrode (set corresponding bit in register <a href="#DAC_Registers" title="">0x120-0x12C</a> and <a href="#DAC_Registers" title="">0x158-0x15C</a>)
</li><li> Assign your stimulation electrode to a stimulation channel (DAC A to F) (set corresponding bits in register <a href="#DAC_Registers" title="">0x160-0x16C</a>)
</li></ul>
<a name="Stimulus_channel_setup_advice" id="Stimulus_channel_setup_advice"></a><h5> <span class="mw-headline"> Stimulus channel setup advice </span></h5>
<ul><li> Assign a sideband Channel to a stimulation channel (set in register <a href="#DAC_Registers" title="">0x154</a>)
</li></ul>
<table class="wikitable" border="0" cellpadding="10" cellspacing="1">

<tbody><tr>
<td>
<table align="center" border="0" cellpadding="20" cellspacing="0">

<tbody><tr>
<td> Control:
</td></tr>
<tr>
<td><div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:STG_Mux_Stimswtich_control.png" class="image" title="Sideband Singnal Control for electrode n"><img alt="Sideband Singnal Control for electrode n" src="MEA2100_User_Guide-Dateien/800px-STG_Mux_Stimswtich_control.png" border="0" height="605" width="800"></a></div></div>
</td><td>
</td></tr></tbody></table>
</td><td>
<table align="center">

<tbody><tr>
<td>Decoding for stimulation channel (DAC) at stimulus selector (register 0x160-0x16C)
</td></tr>
<tr>
<td>00: GND
</td></tr>
<tr>
<td>01: DAC A/B
</td></tr>
<tr>
<td>10: DAC C/D
</td></tr>
<tr>
<td>11: DAC E/F
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<table align="left" border="0" cellpadding="5" cellspacing="0">

<tbody><tr>
<td>
</td></tr>
<tr>
<td>
</td></tr>
</tbody></table>
</td><td>
</td></tr>
</tbody></table>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:STG_Config_Overview.png" class="image" title="STG Data Path and configuration dependencies"><img alt="Sideband Singnal Control for electrode n" src="MEA2100_User_Guide-Dateien/800px-STG_Config_Overview.png" border="0" height="286" width="800"></a></div></div>
<p><br>
</p>
<a name="List_mode_for_advanced_stimulation" id="List_mode_for_advanced_stimulation"></a><h5> <span class="mw-headline"> List mode for advanced stimulation </span></h5>
<p>There is the possibilty to predefine and quickly switch the 
electrodes between up to 256 different stimulation configurations. The 
DAC select and Stimulation Enable registers are actually an array of 256
 independent configurations. During setup the register <a href="#DAC_Registers" title="">0x150</a>,
 the Electrode configuration ID CTRL register controls which 
configuration is to be defined. Here bits 0-7 define which one of the 
256 possible configrations is selected for setup editing.
</p><p>Bit 28 in the Electrode configuration ID CTRL register control 
how the configuration is selected during stimulation. This bit can 
either be "0" for taking configuration ID from the Interface Board. When
 this bit is set to "1" the "internal" configuration ID is active. Then 
bits 8 to 15 in the sideband datasteam define the active electrode 
configuration.
In "external mode" the List Mode configuration ID is generated in the 
Trigger Block of the Interface Board.
</p>
<a name="Standard_Trigger" id="Standard_Trigger"></a><h4> <span class="mw-headline"> Standard Trigger </span></h4>
<div id="Trigger"></div>
<a name="Standard_Trigger_Setup" id="Standard_Trigger_Setup"></a><h5> <span class="mw-headline"> Standard Trigger Setup </span></h5>
<p>For controling the stimulation three trigger statemachines are 
implemented. In the default configuration, each trigger has control of 
two stimulus pattern read out units. These units support data for one 
DAC pair and one sideband. So this controls one stimulus pattern and its
 corresponding digital information <a href="#DAC_Registers" title="">0x104-0x108</a>. 
</p><p>An example where more than one DAC is assigned to one trigger is,
 when multiple electrodes are to be stimulated, grouped into two blocks,
 where each of the two blocks has a different stimulation signal 
amplitude. To accomplish this, two DACs can be assigned to one trigger. 
As long as the timing of the two stimulation patterns for two stimulus 
groups are the same, they can share one sideband resulting in a setup 
where one trigger controls two DACS and one sideband.
</p><p>When the two stimulation groups have differences in timing it is 
useful to use a seperate sidebands for each of these groups, thus 
resulting in a setup where one trigger controls two DACs and two 
sidebands.
</p><p>The assignment of the three DAC pairs and three sidebands to the 
three triggers within each block is controlled by registers 0x104 for 
the DACs and by register 0x108 for the sideband channels. With this 
setup the controlling trigger for each DAC and sideband has to be 
choosen.
</p><p>Start and Stop of the stimulation is always controlled at the 
level of the triggers, so that all DAC and sidebands which are grouped 
together to a specific trigger are started and keeped running in sync.
</p>
<a name="Start_Trigger" id="Start_Trigger"></a><h5> <span class="mw-headline"> Start Trigger </span></h5>
<p>For the trigger to work, the first bit(0) in the Trigger Control Register 1 <a href="#Trigger_CTRL_Register" title="">(0x200)</a> <b>on the Interface board</b> has to be set to 1. This enables the trigger event packet to propagate from the interface board to the stimulus generators.
</p><p>The Trigger ID registers <a href="#Trigger_CTRL_Register" title="">(0x218 to 0x244)</a>
 define for each trigger, which Stimulus-Pattern Memory-Segment to use 
when the corresponding trigger is startet. For single segment mode leave
 this register at the default value of 0.
</p><p>To actually start a trigger manually, write a "1" to the bit 
which corresponds the trigger number in the Trigger Event Status 
register <a href="#Trigger_CTRL_Register" title="">0x214</a>. For example to manually start trigger 1, write a value of 0x00000001 to register <a href="#Trigger_CTRL_Register" title="">0x214</a>.
</p><p>To start a trigger with external signals or other sources a Digital Multiplexer for source select is implemented <a href="#Trigger_CTRL_Register" title="">(0x280-0x2AC)</a>.
</p>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MEA2100_Interface_Board_HS1_1.png" class="image" title="Standard Trigger behavior"><img alt="Standard Trigger behavior" src="MEA2100_User_Guide-Dateien/800px-MEA2100_Interface_Board_HS1_1.png" border="0" height="380" width="800"></a></div></div>
<a name="Direct_Streaming_Mode_triggered_by_SW" id="Direct_Streaming_Mode_triggered_by_SW"></a><h4> <span class="mw-headline"> Direct Streaming Mode triggered by SW </span></h4>
<div id="Direct_Streaming_Trigger_by_SW"></div>
<p>A further advanced mode for Stimulation is the DSP generated stimulus
 pattern direct streaming mode, which can be standard triggered and 
monitored by the computer SW.
In this mode the trigger statemachine and memory on an STG will be 
bypassed and the DAC and SBS data will be send direct from the DSP to 
the stimulus logic.
The setup for stimulus switch and selector still needs to be done as in 
standard mode.
</p>
<a name="Direct_Steaming_Trigger_Setup" id="Direct_Steaming_Trigger_Setup"></a><h5> <span class="mw-headline"> Direct Steaming Trigger Setup </span></h5>
<p>To detect a trigger event on the DSP the digital data stream to the DSP needs to be enabled <a href="#DSP_Registers" title="">reg 0x400 bit 12</a>.
In this <a href="#DSP_in_Data" title="">digital data stream</a> the 8th and 18th vector reflect the trigger event information
</p>
<a name="Direct_Steaming_Data_path_Setup" id="Direct_Steaming_Data_path_Setup"></a><h5> <span class="mw-headline"> Direct Steaming Data path Setup </span></h5>
<p>For controling the stimulation by direct streaming data to an STG, 
the data source for the DAC and SBS Data need to be switched to DSP. 
This needs to be done in register <a href="#DAC_Registers" title="">0x100</a>.<br>
To start the distribution of the streaming data from the FIFO configure the <a href="#DSP_Registers" title="">register 0x430</a>. After this the stimulus data can be send via the straming FIFO of the DSP.
For this write 36 DWords to the address 0xC0000000 from the DSP.
</p>
<ul><li>24 DWords for DAC Data
<ul><li>6 DWords to HS1 STG1 (DAC: A, C, E, B, D, F)
</li><li>6 DWords to HS1 STG2 (DAC: A, C, E, B, D, F)
</li><li>6 DWords to HS2 STG1 (DAC: A, C, E, B, D, F)
</li><li>6 DWords to HS2 STG2 (DAC: A, C, E, B, D, F)
</li></ul>
</li><li>12 DWords for SBS Data
<ul><li>3 DWords to HS1 STG1 (SBS: 1, 2, 3)
</li><li>3 DWords to HS1 STG2 (SBS: 1, 2, 3)
</li><li>3 DWords to HS2 STG1 (SBS: 1, 2, 3)
</li><li>3 DWords to HS2 STG2 (SBS: 1, 2, 3)
</li></ul>
</li></ul>
<p>Allways write 36 DWords, even when you switch only one STG to direct 
streaming mode, because the FIFO read logic expects 36 Data in the 
predefined order.
</p>
<div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MEA2100_Interface_Board_direct_streaming_mode.png" class="image" title="Direct streaming mode"><img alt="Direct streaming mode" src="MEA2100_User_Guide-Dateien/800px-MEA2100_Interface_Board_direct_streaming_mode.png" border="0" height="378" width="800"></a></div></div>
<a name="Digital_Multiplexer" id="Digital_Multiplexer"></a><h3> <span class="mw-headline"> Digital Multiplexer </span></h3>
<p>There are multiple digital signals within the MEA2100 system, which 
represent internal states of the systems. These digital signals can be 
mapped
</p>
<ul><li> To the digital outputs of the Interface board
</li><li> Into the digital datastream via the USB connection to the PC
</li><li> Used by the DSP
</li><li> With some restrictions used as triggers conditions for Stimulation
</li><li> With some restrictions used as list mode ID increment
</li><li> Trigger gated data start mode
</li></ul>
<p>The following digital signals are available for Digital Output and Digital Datastream to the computer and DSP
</p>
<ul><li> Digital In bit 0 to 31; these are 32 bit taken from the rear side Digital Connector
</li><li> Digital Pulse Register bit 0 to 31; taken from Digital Pulse 
Register 0x700, valid for the duration defined in Register 0x704-0x710, 
started by a write to Register 0x700.
</li><li> Feedback Register bit 0 to 31; taken from Feedback Register 0x780
</li><li> Aux In bit 0 and 1; taken from the two lemo connectors on the Interface board.
</li><li> A fixed value of "0"
</li><li> A fixed value of "1"
</li><li> Trigger Status of the Stimulation Boards
</li><li> Any bit from all the Sideband Channels
</li></ul>
<p>There is a multiplexer for each bit of the digital datastream at 
register 0x880-0x8BC for USB connector A and register 0x8C0-0x8FC for 
USB connector B. For the digital output there is for each bit a register
 at 0x840-0x87C. There you can select its source from all selectable 
sources as descibed in the table above.
</p><p>The multiplexer for the following digital signals are available to trigger the Stimulators
</p>
<ul><li> A fixed value of "0"
</li><li> Digital In bit 0 to 31; these are 32 bit taken from the rear side Digital Connector
</li><li> Feedback Register bit 0 to 31; taken from Feedback Register 0x780
</li><li> Aux In bit 0 and 1; taken from the two lemo connectors on the Interface board.
</li></ul>
<p>The multiplxer for each trigger are located in register 0x280 to 0x2AC.
</p><p><br>
</p>
<a name="Using_McsUsbUpdate_to_review_configuration" id="Using_McsUsbUpdate_to_review_configuration"></a><h3> <span class="mw-headline"> Using McsUsbUpdate to review configuration </span></h3>
<p>For reviewing the setup done with the DSP there is a program called McsUsbUpdate.
With this program all relevant registers are reflected and according to the use case RO, RW, WO.
</p><p><br>
</p><p><br>
</p>
<table class="wikitable" border="0" cellpadding="10" cellspacing="1">

<tbody><tr>
<td>
</td></tr>
</tbody></table><table align="center" border="0" cellpadding="20" cellspacing="0">

<tbody><tr>
<td><div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MCS_USB_Update_MEA2100_initial_screen.png" class="image" title="McsUsbUpdate"><img alt="Direct streaming mode" src="MEA2100_User_Guide-Dateien/400px-MCS_USB_Update_MEA2100_initial_screen.png" border="0" height="538" width="400"></a></div></div>
</td><td>
</td><td><div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MCS_USB_Update_MEA2100_Interfaceboard_screen.png" class="image" title="McsUsbUpdate Interface Board screen"><img alt="Direct streaming mode" src="MEA2100_User_Guide-Dateien/600px-MCS_USB_Update_MEA2100_Interfaceboard_screen.png" border="0" height="587" width="600"></a></div></div>
</td></tr></tbody></table>



<table align="center" border="0" cellpadding="5" cellspacing="0">
<tbody><tr>
<td>
</td></tr>
<tr>
<td><div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MCS_USB_Update_MEA2100_Headstage_screen.png" class="image" title="McsUsbUpdate Headstage screen"><img alt="Direct streaming mode" src="MEA2100_User_Guide-Dateien/600px-MCS_USB_Update_MEA2100_Headstage_screen.png" border="0" height="502" width="600"></a></div></div>
</td></tr>
<tr>
<td>
</td></tr></tbody></table>
<table align="center">
<tbody><tr>
<td><div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MCS_USB_Update_MEA2100_STG_screen.png" class="image" title="McsUsbUpdate STG configuration screen"><img alt="Direct streaming mode" src="MEA2100_User_Guide-Dateien/800px-MCS_USB_Update_MEA2100_STG_screen.png" border="0" height="544" width="800"></a></div></div>
</td><td>
</td><td><div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MCS_USB_Update_MEA2100_STGMEM_screen.png" class="image" title="McsUsbUpdate STG Memory readout pane screen"><img alt="Direct streaming mode" src="MEA2100_User_Guide-Dateien/650px-MCS_USB_Update_MEA2100_STGMEM_screen.png" border="0" height="543" width="650"></a></div></div>
</td><td>
</td></tr></tbody></table>


<table align="center">
<tbody><tr>
<td><div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MCS_USB_Update_MEA2100_Digital_screen.png" class="image" title="McsUsbUpdate Digital signal configuration screen"><img alt="Direct streaming mode" src="MEA2100_User_Guide-Dateien/800px-MCS_USB_Update_MEA2100_Digital_screen.png" border="0" height="613" width="800"></a></div></div>
</td><td>
</td><td><div class="center"><div class="floatnone"><a href="http://wiki.mcs.de.com/wiki/index.php/File:MCS_USB_Update_MEA2100_Filter_screen.png" class="image" title="McsUsbUpdate filter settings screen"><img alt="Direct streaming mode" src="MEA2100_User_Guide-Dateien/700px-MCS_USB_Update_MEA2100_Filter_screen.png" border="0" height="687" width="700"></a></div></div>
</td><td>
</td></tr></tbody></table>








<p><br>
</p>
<a name="Data_Format_for_.3E_16_bit" id="Data_Format_for_.3E_16_bit"></a><h1> <span class="mw-headline"> Data Format for &gt; 16 bit </span></h1>
<table align="center" border="1" cellpadding="5" cellspacing="0">
<caption> 24 bit Format, Little endian byteorder
</caption>
<tbody><tr>
<th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td colspan="8"> Byte 1 </td><td colspan="8"> Byte 2 </td><td colspan="8"> Byte 3 </td><td colspan="8"> Byte 4 </td><td colspan="8"> Byte 5 </td><td colspan="8"> Byte 6
</td></tr>
<tr>
<td colspan="8"> LSB 0  </td><td colspan="8"> MSB 0  </td><td colspan="8"> HSB 0  </td><td colspan="8"> LSB 1  </td><td colspan="8"> MSB 1 </td><td colspan="8"> HSB 1
</td></tr></tbody></table>
<table align="center" border="1" cellpadding="5" cellspacing="0">
<caption> 24 bit Format, MC_Rack freundlich, eventuell alle LSBs als Block nach allen 16 bit Kanälen
</caption>
<tbody><tr>
<th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td colspan="8"> Byte 1 </td><td colspan="8"> Byte 2 </td><td colspan="8"> Byte 3 </td><td colspan="8"> Byte 4 </td><td colspan="8"> Byte 5 </td><td colspan="8"> Byte 6
</td></tr>
<tr>
<td colspan="8"> MSB 0  </td><td colspan="8"> HSB 0  </td><td colspan="8"> MSB 1  </td><td colspan="8"> HSB 1  </td><td colspan="8"> LSB 0 </td><td colspan="8"> LSB 1
</td></tr></tbody></table>
<table align="center" border="1" cellpadding="5" cellspacing="0">
<caption> 32 bit Format, Little endian byteorder
</caption>
<tbody><tr>
<th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td colspan="8"> Byte 1 </td><td colspan="8"> Byte 2 </td><td colspan="8"> Byte 3 </td><td colspan="8"> Byte 4
</td></tr>
<tr>
<td colspan="8"> LSB 0  </td><td colspan="8"> MSB 0  </td><td colspan="8"> HSB 0  </td><td colspan="8"> sign extension
</td></tr></tbody></table>
<a name="Register_Interface" id="Register_Interface"></a><h1> <span class="mw-headline"> Register Interface </span></h1>
<a name="Address_Map_.28Address_bits_15-12_determine_the_subcomponet.29" id="Address_Map_.28Address_bits_15-12_determine_the_subcomponet.29"></a><h2> <span class="mw-headline"> Address Map (Address bits 15-12 determine the subcomponet) </span></h2>
<p>When accessed from the DSP, all FPGA Registers are memory mapped to the address region from <tt>0xA0000000</tt> to <tt>0xA000FFFF</tt>.
</p>
<pre>0x0000 to 0x0FFF: Interfaceboard
0x1000 to 0x1FFF: DS Processor Mailbox on Interfaceboard
0x2000 to 0x2FFF: RAM
0x8000 to 0x8FFF: Headstage 0
0x9000 to 0x9FFF: STG1 on HS 0
0xA000 to 0xAFFF: STG2 on HS 0
0xC000 to 0xCFFF: Headstage 1
0xD000 to 0xDFFF: STG1 on HS 1
0xE000 to 0xEFFF: STG2 on HS 1
</pre>
<a name="Interface_Board_Address_Map_.28Address_bits_11-0.29:" id="Interface_Board_Address_Map_.28Address_bits_11-0.29:"></a><h2> <span class="mw-headline"> Interface Board Address Map (Address bits 11-0): </span></h2>
<table class="wikitable" border="0" cellpadding="10" cellspacing="1">

<tbody><tr>
<td> Access time for writes is about 0,65 us.
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>General Purpose Registers (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x000: Device ID Register</td><td colspan="32"> 0x00000001 = MEA 21 Interface FPGA
</td></tr>
<tr>
<td>0x004: HW/FPGA Version Register</td><td colspan="16"> HW/Board Version </td><td colspan="16"> FPGA Version: 0x0101 = Initial Version
</td></tr>
<tr>
<td>0x008&nbsp;: Configuration Register</td><td colspan="23"> Reserved </td><td colspan="1"> Cy2notCy1 </td><td colspan="2"> Reserved </td><td colspan="6"> Additional Boards attached, What kind of board?, ...
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>GTP Registers (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x010: GTP CTRL Register</td><td colspan="30"> Reserved </td><td colspan="1"> HS 1 Link up </td><td colspan="1"> HS 0 Link up
</td></tr>
<tr>
<td>0x014: (RO)GTP Error counter Register</td><td colspan="16"> HS 1  </td><td colspan="16"> HS 0
</td></tr>
<tr>
<td>0x014: (WO)GTP Error counter Reset</td><td colspan="32"> Any Value Resets the counters
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Power and Reset Register (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x020: FPGA Reset</td><td colspan="31"> Reserved </td><td colspan="1"> FPGA Reset
</td></tr>
<tr>
<td>0x024: Power Enable</td><td colspan="29"> Reserved </td><td colspan="1"> HS2 PWR Enable  </td><td colspan="1"> HS1 PWR Enable  </td><td colspan="1"> IF Trafo
</td></tr>
<tr>
<td>0x028: Trafo startup delay</td><td colspan="8"> Reserved </td><td colspan="8"> HS2 Delay  </td><td colspan="8"> HS1 Delay  </td><td colspan="8"> IF Delay
</td></tr>
<tr>
<td>0x02C: LED config Register</td><td colspan="21"> Reserved </td><td colspan="3"> LED HS 1/2 and IF register mode enable  </td><td colspan="5"> Reserved </td><td colspan="3"> LED HS 1/2 and IF output register
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Flash Memory Registers (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x030: (WO)EEPRom Instruction Code Register</td><td colspan="23"> Reserved </td><td colspan="1"> Fifo Reset </td><td colspan="8"> Instruction Code
</td></tr>
<tr>
<td>0x030: (RO)EEPRom Status Register</td><td colspan="21"> Reserved  </td><td colspan="1"> FIFO_empty </td><td colspan="1"> FIFO_full </td><td colspan="1"> Statemachine busy </td><td colspan="8"> Flash Status Register
</td></tr>
<tr>
<td>0x034&nbsp;: EEPRom Memory Address Register</td><td colspan="8"> Reserved </td><td colspan="24"> Flash Address
</td></tr>
<tr>
<td>0x038&nbsp;: EEPRom Data FIFO Register</td><td colspan="32"> 256 Data Bytes in 64 DWords to/from Flash
</td></tr>
<tr>
<td>0x03C&nbsp;: EEPROM Clock Divider Register</td><td colspan="32"> Multiples of 2 divide 38,4 MHz
</td></tr>
</tbody></table>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Data Stream CTRL Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x040: FIFO Interface CTRL Dev0</td><td colspan="26"> Reserved </td><td colspan="1"> incl. EOF<sup>*</sup> </td><td colspan="1"> incl. CTRL Com.<sup>*</sup> </td><td colspan="1"> incl. Timestamp </td><td colspan="1"> incl. Packet cnt. </td><td colspan="1"> Reserved  </td><td colspan="1"> incl. SOF<sup>*</sup>
</td></tr>
<tr>
<td>0x042: FIFO Interface CTRL Dev2</td><td colspan="26"> Reserved </td><td colspan="1"> incl. EOF<sup>*</sup> </td><td colspan="1"> incl. CTRL Com.<sup>*</sup> </td><td colspan="1"> incl. Timestamp </td><td colspan="1"> incl. Packet cnt. </td><td colspan="1"> Reserved  </td><td colspan="1"> incl. SOF<sup>*</sup>
</td></tr>
<tr>
<td>0x044: (W1Set) FIFO Interface CTRL Dev0</td><td colspan="26"> Reserved </td><td colspan="1"> incl. EOF<sup>*</sup> </td><td colspan="1"> incl. CTRL Com.<sup>*</sup> </td><td colspan="1"> incl. Timestamp </td><td colspan="1"> incl. Packet cnt. </td><td colspan="1"> Reserved  </td><td colspan="1"> incl. SOF<sup>*</sup>
</td></tr>
<tr>
<td>0x046: (W1Set) FIFO Interface CTRL Dev2</td><td colspan="26"> Reserved </td><td colspan="1"> incl. EOF<sup>*</sup> </td><td colspan="1"> incl. CTRL Com.<sup>*</sup> </td><td colspan="1"> incl. Timestamp </td><td colspan="1"> incl. Packet cnt. </td><td colspan="1"> Reserved  </td><td colspan="1"> incl. SOF<sup>*</sup>
</td></tr>
<tr>
<td>0x048: (W1Clear) FIFO Interface CTRL Dev0</td><td colspan="26"> Reserved </td><td colspan="1"> incl. EOF<sup>*</sup> </td><td colspan="1"> incl. CTRL Com.<sup>*</sup> </td><td colspan="1"> incl. Timestamp </td><td colspan="1"> incl. Packet cnt. </td><td colspan="1"> Reserved  </td><td colspan="1"> incl. SOF<sup>*</sup>
</td></tr>
<tr>
<td>0x04A: (W1Clear) FIFO Interface CTRL Dev2</td><td colspan="26"> Reserved </td><td colspan="1"> incl. EOF<sup>*</sup> </td><td colspan="1"> incl. CTRL Com.<sup>*</sup> </td><td colspan="1"> incl. Timestamp </td><td colspan="1"> incl. Packet cnt. </td><td colspan="1"> Reserved  </td><td colspan="1"> incl. SOF<sup>*</sup>
</td></tr>
<tr>
<td>0x04C: (RO)Enabled Annalog Channels Dev0</td><td colspan="29"> Reserved </td><td colspan="1"> IF </td><td colspan="1"> HS1 </td><td colspan="1"> HS0
</td></tr>
<tr>
<td>0x04E: (RO)Enabled Annalog Channels Dev2</td><td colspan="29"> Reserved </td><td colspan="1"> IF </td><td colspan="1"> HS1 </td><td colspan="1"> HS0
</td></tr>
<tr>
<td>0x050: (RO)Enabled Digital Channels Dev0</td><td colspan="29"> Reserved </td><td colspan="1"> IF </td><td colspan="1"> HS1 </td><td colspan="1"> HS0
</td></tr>
<tr>
<td>0x052: (RO)Enabled Digital Channels Dev2</td><td colspan="29"> Reserved </td><td colspan="1"> IF </td><td colspan="1"> HS1 </td><td colspan="1"> HS0
</td></tr>
<tr>
<td>0x054: Channel config. HS0 Dev0</td><td colspan="8"> Reserved </td><td colspan="8"> Channeloffset </td><td colspan="8"> Reserved </td><td colspan="8"> # of Channels
</td></tr>
<tr>
<td>0x056: Channel config. HS0 Dev2</td><td colspan="8"> Reserved </td><td colspan="8"> Channeloffset </td><td colspan="8"> Reserved </td><td colspan="8"> # of Channels
</td></tr>
<tr>
<td>0x058: Channel config. HS1 Dev0</td><td colspan="8"> Reserved </td><td colspan="8"> Channeloffset </td><td colspan="8"> Reserved </td><td colspan="8"> # of Channels
</td></tr>
<tr>
<td>0x05A: Channel config. HS1 Dev2</td><td colspan="8"> Reserved </td><td colspan="8"> Channeloffset </td><td colspan="8"> Reserved </td><td colspan="8"> # of Channels
</td></tr>
<tr>
<td>0x05C: Channel config. DSP Dev0</td><td colspan="8"> Reserved </td><td colspan="8"> Channeloffset </td><td colspan="8"> Reserved </td><td colspan="8"> # of Channels
</td></tr>
<tr>
<td>0x05E: Channel config. DSP Dev2</td><td colspan="8"> Reserved </td><td colspan="8"> Channeloffset </td><td colspan="8"> Reserved </td><td colspan="8"> # of Channels
</td></tr>
<tr>
<td>0x060: Channel config. IF Dev0</td><td colspan="8"> Reserved </td><td colspan="8"> Channeloffset </td><td colspan="8"> Reserved </td><td colspan="8"> # of Channels
</td></tr>
<tr>
<td>0x062: Channel config. IF Dev2</td><td colspan="8"> Reserved </td><td colspan="8"> Channeloffset </td><td colspan="8"> Reserved </td><td colspan="8"> # of Channels
</td></tr>
<tr>
<td>0x064 - 0x6F: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x070: Dig. Channel1 low half Enable IF Dev0</td><td colspan="14"> Reserved </td><td colspan="1">HS2 segm. ID X2 </td><td colspan="1">HS2 segm. ID X1 </td><td colspan="14"> Reserved </td><td colspan="1">HS1 segm. ID X2 </td><td colspan="1">HS1 segm. ID X1
</td></tr>
<tr>
<td>0x072: Dig. Channel1 low half Enable IF Dev2</td><td colspan="14"> Reserved </td><td colspan="1">HS2 segm. ID X2 </td><td colspan="1">HS2 segm. ID X1 </td><td colspan="14"> Reserved </td><td colspan="1">HS1 segm. ID X2 </td><td colspan="1">HS1 segm. ID X1
</td></tr>
<tr>
<td>0x074: Dig. Channel1 up half Enable IF Dev0 </td><td colspan="14"> Reserved </td><td colspan="1">HS2 elec. ID X2 </td><td colspan="1">HS2 elec. ID X1</td><td colspan="14"> Reserved </td><td colspan="1">HS1 elec. ID X2 </td><td colspan="1">HS1 elec. ID X1
</td></tr>
<tr>
<td>0x076: Dig. Channel1 up half Enable IF Dev2 </td><td colspan="14"> Reserved </td><td colspan="1">HS2 elec. ID X2 </td><td colspan="1">HS2 elec. ID X1</td><td colspan="14"> Reserved </td><td colspan="1">HS1 elec. ID X2 </td><td colspan="1">HS1 elec. ID X1
</td></tr>
<tr>
<td>0x080: Dig. Channel2 low half Enable IF Dev0</td><td colspan="2"> Reserved </td><td colspan="6"> HS2 DAC Data </td><td colspan="3"> HS2 Sideband </td><td colspan="1"> HS2 Trigger Status </td><td colspan="2"> Reserved </td><td colspan="6"> HS1 DAC Data </td><td colspan="3"> HS1 Sideband </td><td colspan="1"> HS1 Trigger Status </td><td colspan="2"> Reserved </td><td colspan="1"> Aux In </td><td colspan="1"> Feedback </td><td colspan="1"> Register </td><td colspan="1"> Digital Out </td><td colspan="1"> Digital In </td><td colspan="1"> Mux Data
</td></tr>
<tr>
<td>0x082: Dig. Channel1 low half Enable IF Dev2</td><td colspan="2"> Reserved </td><td colspan="6"> HS2 DAC Data </td><td colspan="3"> HS2 Sideband </td><td colspan="1"> HS2 Trigger Status </td><td colspan="2"> Reserved </td><td colspan="6"> HS1 DAC Data </td><td colspan="3"> HS1 Sideband </td><td colspan="1"> HS1 Trigger Status </td><td colspan="2"> Reserved </td><td colspan="1"> Aux In </td><td colspan="1"> Feedback </td><td colspan="1"> Register </td><td colspan="1"> Digital Out </td><td colspan="1"> Digital In </td><td colspan="1"> Mux Data
</td></tr>
<tr>
<td>0x084: Dig. Channe2 up half Enable IF Dev0</td><td colspan="2"> Reserved </td><td colspan="6"> HS2 DAC Data </td><td colspan="3"> HS2 Sideband </td><td colspan="1"> HS2 Trigger Status </td><td colspan="2"> Reserved </td><td colspan="6"> HS1 DAC Data </td><td colspan="3"> HS1 Sideband </td><td colspan="1"> HS1 Trigger Status </td><td colspan="2"> Reserved </td><td colspan="1"> Aux In </td><td colspan="1"> Feedback </td><td colspan="1"> Register </td><td colspan="1"> Digital Out </td><td colspan="1"> Digital In </td><td colspan="1"> Mux Data
</td></tr>
<tr>
<td>0x086: Dig. Channel2 up half Enable IF Dev2</td><td colspan="2"> Reserved </td><td colspan="6"> HS2 DAC Data </td><td colspan="3"> HS2 Sideband </td><td colspan="1"> HS2 Trigger Status </td><td colspan="2"> Reserved </td><td colspan="6"> HS1 DAC Data </td><td colspan="3"> HS1 Sideband </td><td colspan="1"> HS1 Trigger Status </td><td colspan="2"> Reserved </td><td colspan="1"> Aux In </td><td colspan="1"> Feedback </td><td colspan="1"> Register </td><td colspan="1"> Digital Out </td><td colspan="1"> Digital In </td><td colspan="1"> Mux Data
</td></tr>
<tr>
<td>0x088: FIFO/Channel2 Mode CTRL Dev0</td><td colspan="16"> Reserved </td><td colspan="8"> 16bit, 24bit, 32 bit mode CTRL<sup>**</sup> </td><td colspan="4"> Reserved </td><td colspan="1"> Cy. distinction </td><td colspan="1"> Reserved </td><td colspan="1"> Triggered Mode </td><td colspan="1"> Dev0 Start
</td></tr>
<tr>
<td>0x08A: FIFO/Channel Mode CTRL Dev2</td><td colspan="16"> Reserved </td><td colspan="8"> 16bit, 24bit, 32 bit mode CTRL<sup>**</sup> </td><td colspan="4"> Reserved </td><td colspan="1"> Cy. distinction </td><td colspan="1"> Reserved </td><td colspan="1"> Triggered Mode </td><td colspan="1"> Dev2 Start
</td></tr>
<tr>
<td>0x08C: Sampling Freq. Dev0</td><td colspan="25"> Reserved </td><td colspan="7"> Sampling Rate
</td></tr>
<tr>
<td>0x08E: Sampling Freq. Dev2</td><td colspan="25"> Reserved </td><td colspan="7"> Sampling Rate
</td></tr>
<tr>
<td>0x090: Gate Mask Dev0</td><td colspan="32"> Gate Mask of Trigged Mode
</td></tr>
<tr>
<td>0x092: Gate Mask Dev2</td><td colspan="32"> Gate Mask of Trigged Mode
</td></tr>
<tr>
<td>0x094: Compare Value of Gate Mask Dev0</td><td colspan="32"> Compare this Value against the Multiplexed Data configured in Register 0x900
</td></tr>
<tr>
<td>0x096: Compare Value of Gate Mask Dev2</td><td colspan="32"> Compare this Value against the Multiplexed Data configured in Register 0x900
</td></tr>
<tr>
<td>0x098: Amount of sweeps in Trigged Mode Dev0</td><td colspan="32"> Count Start Value
</td></tr>
<tr>
<td>0x09A: Amount of sweeps in Trigged Mode Dev2</td><td colspan="32"> Count Start Value
</td></tr>
<tr>
<td>0x09C: Current Count Value Dev0</td><td colspan="32"> Current remaining sweeps until Stop
</td></tr>
<tr>
<td>0x09E: Current Count Value Dev2</td><td colspan="32"> Current remaining sweeps until Stop
</td></tr>
</tbody></table>
</td></tr>
<tr>
<td> <sup>*</sup>only in 24 and 32Bit Mode used
</td></tr>
<tr>
<td><sup>**</sup>Decoding Table:
</td><td>
</td></tr>
<tr>
<td>
<pre>            bit 15  14  13  12  11  10  09  08     Description:
16 bit mode      0   0   0   0  S/U  0   0   0  Bits 23 &amp; 14 downto 0
16 bit mode      0   0   0   1  S/U  0   0   0  Bits 23 &amp; 15 downto 1
16 bit mode      0   0   1   0  S/U  0   0   0  Bits 23 &amp; 16 downto 2
16 bit mode      0   0   1   1  S/U  0   0   0  Bits 23 &amp; 17 downto 3
16 bit mode      0   1   0   0  S/U  0   0   0  Bits 23 &amp; 18 downto 4
16 bit mode      0   1   0   1  S/U  0   0   0  Bits 23 &amp; 19 downto 5
16 bit mode      0   1   1   0  S/U  0   0   0  Bits 23 &amp; 20 downto 6
16 bit mode      0   1   1   1  S/U  0   0   0  Bits 23 &amp; 21 downto 7
16 bit mode      1   0   0   0  S/U  0   0   0  Bits 23      downto 8
24 bit test mode x   x   x   x  S/U  0   0   1  16 bit lower values plus 8 bit upper values
24 bit real mode x   x   x   x  S/U  0   1   0  all 24 bit in a chain
32 bit mode      x   x   x   x  S/U  0   1   1  all data 32 bit aligned
                                S/U&nbsp;: Signed or unsigned mode - 0 = unsigend, 1 = signed
</pre>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>ADC Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x100: ADC Control Register</td><td colspan="31"> Reserved </td><td colspan="1"> Start Stop
</td></tr>
<tr>
<td>0x104: Enable ADCs</td><td colspan="31"> Reserved </td><td colspan="1"> ADC 1
</td></tr>
<tr>
<td>0x108 - 0x1FC: </td><td colspan="32"> Reserved
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<div id="Trigger_CTRL_Register"></div>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Trigger CTRL Register</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x200: Trigger CTRL Register 1</td><td colspan="4"> Reserved </td><td colspan="4"> Trigger status feedback source</td><td colspan="4"> Reserved </td><td colspan="12"> send Rise/Fall seperate per Trigger </td><td colspan="7"> Reserved </td><td colspan="1"> Enable Trigger
</td></tr>
<tr>
<td>0x214: Trigger Event Status Register </td><td colspan="20"> Reserved </td><td colspan="12"> Trigger Event
</td></tr>
<tr>
<td>0x218: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 1, to HS1 STG 1 Trigger 1
</td></tr>
<tr>
<td>0x21C: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 2, to HS1 STG 1 Trigger 2
</td></tr>
<tr>
<td>0x220: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 3, to HS1 STG 1 Trigger 3
</td></tr>
<tr>
<td>0x224: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 4, to HS1 STG 2 Trigger 1
</td></tr>
<tr>
<td>0x228: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 5, to HS1 STG 2 Trigger 2
</td></tr>
<tr>
<td>0x22C: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 6, to HS1 STG 2 Trigger 3
</td></tr>
<tr>
<td>0x230: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 7, to HS2 STG 1 Trigger 1
</td></tr>
<tr>
<td>0x234: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 8, to HS2 STG 1 Trigger 2
</td></tr>
<tr>
<td>0x238: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 9, to HS2 STG 1 Trigger 3
</td></tr>
<tr>
<td>0x23C: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 10, to HS2 STG 2 Trigger 1
</td></tr>
<tr>
<td>0x240: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 11, to HS2 STG 2 Trigger 2
</td></tr>
<tr>
<td>0x244: Trigger Segment ID Register </td><td colspan="24"> Reserved </td><td colspan="8"> Segment ID 12, to HS2 STG 2 Trigger 3
</td></tr>
<tr>
<td>0x260: Trigger status feedback HS1 Register (RO/RW) </td><td colspan="10"> Reserved </td><td colspan="6"> Armed 6 ... 1</td><td colspan="10"> Reserved </td><td colspan="6"> Running 6 ... 1
</td></tr>
<tr>
<td>0x264: Trigger status feedback HS2 Register (RO/RW) </td><td colspan="10"> Reserved </td><td colspan="6"> Armed 6 ... 1</td><td colspan="10"> Reserved </td><td colspan="6"> Running 6 ... 1
</td></tr>
<tr>
<td>0x280 - 0x294: External trigger source</td><td colspan="32"> Data value from 0 to 99 for Trigger 1 to 6 (Headstage 1)<sup>***</sup>
</td></tr>
<tr>
<td>0x298 - 0x2AC: External trigger source</td><td colspan="32"> Data value from 0 to 99 for Trigger 7 to 12 (Headstage 2)<sup>***</sup>
</td></tr>
</tbody></table>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Digital IO Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x300: Digital Out Register</td><td colspan="32"> Data (RO)
</td></tr>
<tr>
<td>0x304: Digital In Register</td><td colspan="32"> Data (RO)
</td></tr>
<tr>
<td>0x308: Direction Register </td><td colspan="32"> '1': Input, '0' Output
</td></tr>
<tr>
<td>0x30C: Interrupt Enable </td><td colspan="32"> '1': Interrupt enabled, only for Inputs, '0' Interrupt disabled
</td></tr>
<tr>
<td>0x310: Aux Data Out Register</td><td colspan="30"> Reserved </td><td colspan="2"> Aux Data
</td></tr>
<tr>
<td>0x314: Aux Data In Register </td><td colspan="30"> Reserved </td><td colspan="2"> Aux Data (RO)
</td></tr>
<tr>
<td>0x318: Aux Data Dir Register</td><td colspan="30"> Reserved </td><td colspan="2"> '0': Input, '1' Output
</td></tr>
</tbody></table>
</td></tr>
<tr>
<td>
<div id="DSP_Registers"></div>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>DSP Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x400: DSP Indata CTRL Register </td><td colspan="16"> Reserved </td><td colspan="1"> Filtered HS2 Data en </td><td colspan="1"> Filtered HS1 Data en </td><td colspan="1"> Timestamp Data en </td><td colspan="1"> Digital Data en </td><td colspan="1"> IF Data en </td><td colspan="1"> HS2 Data en </td><td colspan="1"> HS1 Data en </td><td colspan="1"> Int en </td><td colspan="6"> Reserved  </td><td colspan="1"> Clr Fifo Flags </td><td colspan="1"> Reset Fifo
</td></tr>
<tr>
<td>0x404: DSP Outdata CTRL Register</td><td colspan="23"> Reserved </td><td colspan="1"> Int en </td><td colspan="6"> Reserved  </td><td colspan="1"> Clr Fifo Flags </td><td colspan="1"> Reset Fifo
</td></tr>
<tr>
<td>0x408: DSP In Fifo Status Flags (RO)</td><td colspan="24"> Reserved </td><td colspan="1"> overflow occured</td><td colspan="1"> overflow </td><td colspan="1"> full </td><td colspan="1"> progr full </td><td colspan="1"> prog empty </td><td colspan="1"> empty </td><td colspan="1"> underflow </td><td colspan="1"> underflow occured
</td></tr>
<tr>
<td>0x40C: DSP Out Fifo Status Flags (RO)</td><td colspan="24"> Reserved </td><td colspan="1"> overflow occured</td><td colspan="1"> overflow </td><td colspan="1"> full </td><td colspan="1"> progr full </td><td colspan="1"> prog empty </td><td colspan="1"> empty </td><td colspan="1"> underflow </td><td colspan="1"> underflow occured
</td></tr>
<tr>
<td>0x410: DSP Indata Threshold Register </td><td colspan="6"> Reserved </td><td colspan="10"> Fifo full TH </td><td colspan="6"> Reserved </td><td colspan="10"> Fifo empty TH
</td></tr>
<tr>
<td>0x414: DSP Outdata Threshold Register </td><td colspan="6"> Reserved </td><td colspan="10"> Fifo full TH </td><td colspan="6"> Reserved </td><td colspan="10"> Fifo empty TH
</td></tr>
<tr>
<td>0x420: DSP Boot conf. Register</td><td colspan="12"> Reserved </td><td colspan="4"> Bootmode </td><td colspan="6"> Reserved </td><td colspan="1"> Reset  </td><td colspan="1"> POR </td><td colspan="6"> Reserved </td><td colspan="2"> I2C Bus enable
</td></tr>
<tr>
<td>0x424: DSP Mailbox CTRL Register</td><td colspan="23"> Reserved </td><td colspan="1"> Mailbox to DSP int enable (GP 6)</td><td colspan="8"> Reserved
</td></tr>
<tr>
<td>0x428: DSP Mailbox Last used Addr. Register</td><td colspan="20"> Reserved </td><td colspan="12"> Last used Address for write to Mailbox
</td></tr>
<tr>
<td>0x430: DSP Streamdata CTRL Register</td><td colspan="14"> Reserved </td><td colspan="1"> Keep last Streamdata </td><td colspan="1"> Enable Streaming </td><td colspan="7"> Reserved </td><td colspan="1"> Int en </td><td colspan="6"> Reserved  </td><td colspan="1"> Clr Fifo Flags </td><td colspan="1"> Reset Fifo
</td></tr>
<tr>
<td>0x434: DSP Stream Fifo Status Flags (RO)</td><td colspan="24"> Reserved </td><td colspan="1"> overflow occured</td><td colspan="1"> overflow </td><td colspan="1"> full </td><td colspan="1"> progr full </td><td colspan="1"> prog empty </td><td colspan="1"> empty </td><td colspan="1"> underflow </td><td colspan="1"> underflow occured
</td></tr>
<tr>
<td colspan="33"> Filter coefficents
</td></tr>
<tr>
<td>0x600: Filter 1 coefficent b[0]</td><td colspan="32"> Filter coefficent b[0] as Q1.30 value
</td></tr>
<tr>
<td>0x608: Filter 1 coefficent b[1]</td><td colspan="32"> Filter coefficent b[1] as Q1.30 value
</td></tr>
<tr>
<td>0x60C: Filter 1 coefficent a[1]</td><td colspan="32"> Filter coefficent a[1] as Q1.30 value
</td></tr>
<tr>
<td>0x610: Filter 1 coefficent b[2]</td><td colspan="32"> Filter coefficent b[2] as Q1.30 value
</td></tr>
<tr>
<td>0x614: Filter 1 coefficent a[2]</td><td colspan="32"> Filter coefficent a[2] as Q1.30 value
</td></tr>
<tr>
<td>0x61C: Filter 1 CTRL</td><td colspan="30"> Reserved </td><td colspan="1"> Filter Enable HS 2</td><td colspan="1"> Filter Enable HS 1
</td></tr>
<tr>
<td>0x620: Filter 2 coefficent b[0]</td><td colspan="32"> Filter coefficent b[0] as Q1.30 value
</td></tr>
<tr>
<td>0x628: Filter 2 coefficent b[1]</td><td colspan="32"> Filter coefficent b[1] as Q1.30 value
</td></tr>
<tr>
<td>0x62C: Filter 2 coefficent a[1]</td><td colspan="32"> Filter coefficent a[1] as Q1.30 value
</td></tr>
<tr>
<td>0x630: Filter 2 coefficent b[2]</td><td colspan="32"> Filter coefficent b[2] as Q1.30 value
</td></tr>
<tr>
<td>0x634: Filter 2 coefficent a[2]</td><td colspan="32"> Filter coefficent a[2] as Q1.30 value
</td></tr>
<tr>
<td>0x63C: Filter 2 CTRL</td><td colspan="30"> Reserved </td><td colspan="1"> Filter Enable HS 2</td><td colspan="1"> Filter Enable HS 1
</td></tr>
<tr>
<td>0x640: Filter 3 coefficent b[0]</td><td colspan="32"> Filter coefficent b[0] as Q1.30 value
</td></tr>
<tr>
<td>0x648: Filter 3 coefficent b[1]</td><td colspan="32"> Filter coefficent b[1] as Q1.30 value
</td></tr>
<tr>
<td>0x64C: Filter 3 coefficent a[1]</td><td colspan="32"> Filter coefficent a[1] as Q1.30 value
</td></tr>
<tr>
<td>0x650: Filter 3 coefficent b[2]</td><td colspan="32"> Filter coefficent b[2] as Q1.30 value
</td></tr>
<tr>
<td>0x654: Filter 3 coefficent a[2]</td><td colspan="32"> Filter coefficent a[2] as Q1.30 value
</td></tr>
<tr>
<td>0x65C: Filter 3 CTRL</td><td colspan="30"> Reserved </td><td colspan="1"> Filter Enable HS 2</td><td colspan="1"> Filter Enable HS 1
</td></tr>
<tr>
<td>0x660: Filter 4 coefficent b[0]</td><td colspan="32"> Filter coefficent b[0] as Q1.30 value
</td></tr>
<tr>
<td>0x668: Filter 4 coefficent b[1]</td><td colspan="32"> Filter coefficent b[1] as Q1.30 value
</td></tr>
<tr>
<td>0x66C: Filter 4 coefficent a[1]</td><td colspan="32"> Filter coefficent a[1] as Q1.30 value
</td></tr>
<tr>
<td>0x670: Filter 4 coefficent b[2]</td><td colspan="32"> Filter coefficent b[2] as Q1.30 value
</td></tr>
<tr>
<td>0x674: Filter 4 coefficent a[2]</td><td colspan="32"> Filter coefficent a[2] as Q1.30 value
</td></tr>
<tr>
<td>0x67C: Filter 4 CTRL</td><td colspan="30"> Reserved </td><td colspan="1"> Filter Enable HS 2</td><td colspan="1"> Filter Enable HS 1
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p>Configurable DSP in Data overview:
</p>
<div id="DSP_in_Data"></div>
<p><br>
</p>
<pre>HS1           122 Datawords (Header, 120 Data, Counter)
HS2           122 Datawords (Header, 120 Data, Counter)
IF              9 Datawords (Header, 8 Data)
Filtered HS1  122 Datawords (Header, 120 Data, Counter)
Filtered HS2  122 Datawords (Header, 120 Data, Counter)
Digital        32 Datawords (Header, 31x Digital Data *)
Timestamp       3 Datawords (Header, 2x Counter == 64 bit Counter)
 * Digital Mux Data for Cypress1        (32 bit)
   Digital Mux Data for Cypress2        (32 bit)
   Digital In Data                      (32 bit)
   Digital Out Data                     (32 bit)
   Digital Register Data (0x800)        (32 bit)
   Feedback                             (32 bit)
   Aux In                               ( 2 bit)
   Trigger Statemashine Status from HS1 (12 bit) to Cypress; additional Trigger Event (6 bit) and Trigger Status (6 bit) to DSP
   SBS from HS1 Channel 1 of X1 and X2  (2x16 bit)
   SBS from HS1 Channel 2 of X1 and X2  (2x16 bit)
   SBS from HS1 Channel 3 of X1 and X2  (2x16 bit)
   DAC A+B from HS1 of X1               (2x16 bit)
   DAC C+D from HS1 of X1               (2x16 bit)
   DAC E+F from HS1 of X1               (2x16 bit)
   DAC A+B from HS1 of X2               (2x16 bit)
   DAC C+D from HS1 of X2               (2x16 bit)
   DAC E+F from HS1 of X2               (2x16 bit)
   Seg. &amp; Elec. ID from HS1 of X1       (2x8  bit)
   Seg. &amp; Elec. ID from HS1 of X2       (2x8  bit)
   Trigger Statemashine Status from HS2 (12 bit) to Cypress; additional Trigger Event (6 bit) and Trigger Status (6 bit) to DSP
   SBS from HS2 Channel 1 of X1 and X2  (2x16 bit)
   SBS from HS2 Channel 2 of X1 and X2  (2x16 bit)
   SBS from HS2 Channel 3 of X1 and X2  (2x16 bit)
   DAC A+B from HS2 of X1               (2x16 bit)
   DAC C+D from HS2 of X1               (2x16 bit)
   DAC E+F from HS2 of X1               (2x16 bit)
   DAC A+B from HS2 of X2               (2x16 bit)
   DAC C+D from HS2 of X2               (2x16 bit)
   DAC E+F from HS2 of X2               (2x16 bit)
   Seg. &amp; Elec. ID from HS2 of X1       (2x8  bit)
   Seg. &amp; Elec. ID from HS2 of X2       (2x8  bit)
</pre>
<pre>The header has the format
 Bit 31      &nbsp;:  1, when data from a headstage is enabled and the HS is not connected, otherwise 0
 Bit 24 to 30&nbsp;:  Data Source enumeration (see below)
 Bit 9 to 23 &nbsp;:  Reserved (Always Zero)
 Bit 0 to 7  &nbsp;:  The number of datapoints + counter values following this header, 0x79 for Headstage data (120 + 1)
</pre>
<pre>Data Source enumeration:
 1: Headstage 1
 2: Headstage 2
 3: Analog Data from Interfaceboard
 4: Headstage 1 filtered Data
 5: Headstage 2 filtered Data
 6: Digital Data
 7: Timestamp counter
</pre>
<p><br>
</p>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Audio DAC Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x500: Right Audio Channel</td><td colspan="12"> Reserved </td><td colspan="4"> Source (DSP, IF, HS1, HS0) </td><td colspan="8"> Reserved </td><td colspan="8"> Channel
</td></tr>
<tr>
<td>0x504: Left Audio Channel</td><td colspan="12"> Reserved </td><td colspan="4"> Source (DSP, IF, HS1, HS0) </td><td colspan="8"> Reserved </td><td colspan="8"> Channel
</td></tr>
<tr>
<td>0x510: Right Audio Attenuation</td><td colspan="26"> Reserved </td><td colspan="6"> Attenuation
</td></tr>
<tr>
<td>0x514: Left Audio Attenuation</td><td colspan="26"> Reserved </td><td colspan="6"> Attenuation
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<pre> Source decoding:
  0: No source
  1: HS0
  2: HS1
  3: IF
  4: DSP(bits 23 - 0)
</pre>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Digital Data Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x700: Digital Pulse Register</td><td colspan="32"> bits can only be set here, and will be cleared after the time defined in reg 0x704 to 0x710
</td></tr>
<tr>
<td>0x704: Digital Pulse Duration 1</td><td colspan="32"> Duration of Digital Data in multiple of 20 us for Pulse Register bits 0 to 7
</td></tr>
<tr>
<td>0x708: Digital Pulse Duration 2</td><td colspan="32"> Duration of Digital Data in multiple of 20 us for Pulse Register bits 8 to 15
</td></tr>
<tr>
<td>0x70c: Digital Pulse Duration 3</td><td colspan="32"> Duration of Digital Data in multiple of 20 us for Pulse Register bits 16 to 23
</td></tr>
<tr>
<td>0x710: Digital Pulse Duration 4</td><td colspan="32"> Duration of Digital Data in multiple of 20 us for Pulse Register bits 24 to 31
</td></tr>
<tr>
<td>0x780: Feedback Data </td><td colspan="32"> Data
</td></tr>
<tr>
<td>0x800: Data to Data Stream </td><td colspan="32"> 'Digital Data-Stream' face in data
</td></tr>
<tr>
<td>0x804: Dig. Data Delay </td><td colspan="26"> Reserved </td><td colspan="6"> Number of sweeps to delay the digital data
</td></tr>
<tr>
<td>0x808: delay configuration </td><td colspan="32"> Switch of datawords if delayed or direct*
</td></tr>
<tr>
<td>0x840 - 0x87C: Select mux for Dig out </td><td colspan="16"> Data value from 0 to 315 <sup>****</sup> for Digital out: 2 to 32(even bits)</td><td colspan="16"> Data value from 0 to 315 <sup>****</sup> for Digital out: 1 to 31(odd bits)
</td></tr>
<tr>
<td>0x880 - 0x8BC: Select mux for Dig Data to Cypress 1 </td><td colspan="16"> Data value from 0 to 315 <sup>****</sup> for Digital Data stream to Host: 2 to 32(even bits)</td><td colspan="16"> Data value from 0 to 315 <sup>****</sup> for Digital Data stream to Host: 1 to 31(odd bits)
</td></tr>
<tr>
<td>0x8C0 - 0x8FC: Select mux for Dig Data to Cypress 2 </td><td colspan="16"> Data value from 0 to 315 <sup>****</sup> for Digital Data stream to Host: 2 to 32(even bits)</td><td colspan="16"> Data value from 0 to 315 <sup>****</sup> for Digital Data stream to Host: 1 to 31(odd bits)
</td></tr>
<tr>
<td>0x900 - 0x93C: Select mux for Trigger of Gated Mode to Cypresses </td><td colspan="16"> Data value from 0 to 315 <sup>****</sup> for Trigger of Gate to Host: 2 to 32(even bits)</td><td colspan="16"> Data value from 0 to 315 <sup>****</sup> for Trigger of Gate to Host: 1 to 31(odd bits)
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td><sup>*</sup>Decoding Table:
</td><td>
</td></tr>
<tr>
<td>
<pre>   Digital In Data                      (bit 1)
   Digital Out Data                     (bit 2)
   Feedback                             (bit 4)
   Aux In                               (bit 5)
   Trigger Statemashine Status from HS1 (bit 8)
   SBS from HS1 Channel 1 of X1 and X2  (bit 9)
   SBS from HS1 Channel 2 of X1 and X2  (bit 10)
   SBS from HS1 Channel 3 of X1 and X2  (bit 11)
   DAC A+B from HS1 of X1               (bit 12)
   DAC C+D from HS1 of X1               (bit 13)
   DAC E+F from HS1 of X1               (bit 14)
   DAC A+B from HS1 of X2               (bit 15)
   DAC C+D from HS1 of X2               (bit 16)
   DAC E+F from HS1 of X2               (bit 17)
   Trigger Statemashine Status from HS2 (bit 20)
   SBS from HS2 Channel 1 of X1 and X2  (bit 21)
   SBS from HS2 Channel 2 of X1 and X2  (bit 22)
   SBS from HS2 Channel 3 of X1 and X2  (bit 23)
   DAC A+B from HS2 of X1               (bit 24)
   DAC C+D from HS2 of X1               (bit 25)
   DAC E+F from HS2 of X1               (bit 26)
   DAC A+B from HS2 of X2               (bit 27)
   DAC C+D from HS2 of X2               (bit 28)
   DAC E+F from HS2 of X2               (bit 29)
</pre>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>List Mode Register</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0xA00 - 0xA2C: Config ID boundarys</td><td colspan="1"> set first config ID to end </td><td colspan="7"> Reserved </td><td colspan="8"> Config Start ID </td><td colspan="8"> Reserved </td><td colspan="8"> Config End ID
</td></tr>
<tr>
<td>0xA40: Config ID Manual/current for SBS 1</td><td colspan="24"> Reserved</td><td colspan="8"> Electrode Config ID 0x00 to 0xFF
</td></tr>
<tr>
<td>0xA4C: Config ID Manual/current for SBS 4</td><td colspan="24"> Reserved</td><td colspan="8"> Electrode Config ID 0x00 to 0xFF
</td></tr>
<tr>
<td>0xA58: Config ID Manual/current for SBS 7</td><td colspan="24"> Reserved</td><td colspan="8"> Electrode Config ID 0x00 to 0xFF
</td></tr>
<tr>
<td>0xA64: Config ID Manual/current for SBS 10</td><td colspan="24"> Reserved</td><td colspan="8"> Electrode Config ID 0x00 to 0xFF
</td></tr>
<tr>
<td>0xA80: Config ID trigger source</td><td colspan="25"> Reserved</td><td colspan="7">Data value from 0 to 100 for Config ID 1<sup>***</sup>
</td></tr>
<tr>
<td>0xA8C: Config ID trigger source</td><td colspan="25"> Reserved</td><td colspan="7">Data value from 0 to 100 for Config ID 4<sup>***</sup>
</td></tr>
<tr>
<td>0xA98: Config ID trigger source</td><td colspan="25"> Reserved</td><td colspan="7">Data value from 0 to 100 for Config ID 7<sup>***</sup>
</td></tr>
<tr>
<td>0xAA4: Config ID trigger source</td><td colspan="25"> Reserved</td><td colspan="7">Data value from 0 to 100 for Config ID 10<sup>***</sup>
</td></tr>
<tr>
<td>0xAC0: (Re-)Start List mode increment</td><td colspan="20"> Reserved</td><td colspan="12"> 1 bit per Sideband
</td></tr>
<tr>
<td>0xAC4: Stop List mode increment</td><td colspan="20"> Reserved</td><td colspan="12"> 1 bit per Sideband
</td></tr>
</tbody></table>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Changed Register Information of Interface FPGA</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> from </th><th> to </th><th> in Revision </th><th> Cypress Rev
</th></tr>
<tr>
<td>Electrode config/segment ID register</td><td colspan="1"> 0x0208 - 0x0234 </td><td colspan="1"> 0x0218 - 0x0244 </td><td colspan="1"> 0.05 </td><td> 0.27
</td></tr>
<tr>
<td>Event Status Register</td><td colspan="1"> 0x0238 </td><td colspan="1"> 0x0214 </td><td colspan="1"> 0.05 </td><td> 0.27
</td></tr>
<tr>
<td>ADC Filter</td><td colspan="1"> 0x0120 - 0x0138 </td><td colspan="1"> 0x0600 - 0x0674 </td><td colspan="1"> 0.05 </td><td>
</td></tr>
<tr>
<td>FIFO/Channel Mode CTRL DevX</td><td colspan="1"> 0x0068 - 0x006B </td><td colspan="1"> 0x006C - 0x006F </td><td colspan="1"> 0.05 </td><td>
</td></tr>
<tr>
<td>Sampling Freq. DevX</td><td colspan="1"> 0x006C - 0x006F </td><td colspan="1"> 0x0070 - 0x0073 </td><td colspan="1"> 0.05 </td><td>
</td></tr>
<tr>
<td>DIGITAL_CHANNELS_L         </td><td colspan="1"> 0x0064 - 0x0067 </td><td colspan="1"> 0x0080 - 0x0083 </td><td colspan="1"> 0.07 </td><td> 0.42
</td></tr>
<tr>
<td>DIGITAL_CHANNELS_H         </td><td colspan="1"> 0x0068 - 0x006B </td><td colspan="1"> 0x0084 - 0x0087 </td><td colspan="1"> 0.07 </td><td> 0.42
</td></tr>
<tr>
<td>FIFO/Channel Mode CTRL DevX</td><td colspan="1"> 0x006C - 0x006F </td><td colspan="1"> 0x0088 - 0x008B </td><td colspan="1"> 0.07 </td><td> 0.42
</td></tr>
<tr>
<td>Sampling Freq. DevX        </td><td colspan="1"> 0x0070 - 0x0073 </td><td colspan="1"> 0x008C - 0x008F </td><td colspan="1"> 0.07 </td><td> 0.42
</td></tr>
<tr>
<td>Select mux for Dig Data </td><td colspan="1"> 0x0340 - 0x03FC </td><td colspan="1"> 0x0840 - 0x08FC </td><td colspan="1"> 0.09 </td><td> 0.51
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p><sup>***</sup>Decoding Table:
</p>
<pre>Value     Source
0        &nbsp;: '0' (default for all bits)
32  -   1&nbsp;: Digital In bit 31 downto 0
64  -  33&nbsp;: Feedback bit 31 downto 0
66  -  65&nbsp;: Aux In bit 1 downto 0
98  -  67&nbsp;: Digital Pulse Register bit 31 downto 0
99       &nbsp;: '1'
100      &nbsp;: SBS bit 8 of each Trigger is all STGs (only for Config ID)
</pre>
<p><br>
<sup>****</sup>Decoding Table:
</p>
<pre>Value       Source
31  -   0&nbsp;: Digital In bit 31 downto 0
63  -  32&nbsp;: Digital Pulse bit 31 downto 0
95  -  64&nbsp;: Feedback bit 31 downto 0
97  -  96&nbsp;: Aux In bit 1 downto 0
99  -  98&nbsp;: "10" fix Values
101 - 100&nbsp;: Trigger Status HS1 STG X1 Trigger 1
103 - 102&nbsp;: Trigger Status HS1 STG X1 Trigger 2
105 - 104&nbsp;: Trigger Status HS1 STG X1 Trigger 3
107 - 106&nbsp;: Trigger Status HS1 STG X2 Trigger 1
109 - 108&nbsp;: Trigger Status HS1 STG X2 Trigger 2
111 - 110&nbsp;: Trigger Status HS1 STG X2 Trigger 3
127 - 112&nbsp;: Sideband signals HS1 STG X1 Trigger 1
143 - 128&nbsp;: Sideband signals HS1 STG X1 Trigger 2
159 - 144&nbsp;: Sideband signals HS1 STG X1 Trigger 3
175 - 160&nbsp;: Sideband signals HS1 STG X2 Trigger 1
191 - 176&nbsp;: Sideband signals HS1 STG X2 Trigger 2
207 - 192&nbsp;: Sideband signals HS1 STG X2 Trigger 3
209 - 208&nbsp;: Trigger Status HS2 STG X1 Trigger 1
211 - 210&nbsp;: Trigger Status HS2 STG X1 Trigger 2
213 - 212&nbsp;: Trigger Status HS2 STG X1 Trigger 3
215 - 214&nbsp;: Trigger Status HS2 STG X2 Trigger 1
217 - 216&nbsp;: Trigger Status HS2 STG X2 Trigger 2
219 - 218&nbsp;: Trigger Status HS2 STG X2 Trigger 3
235 - 220&nbsp;: Sideband signals HS2 STG X1 Trigger 1
251 - 236&nbsp;: Sideband signals HS2 STG X1 Trigger 2
267 - 252&nbsp;: Sideband signals HS2 STG X1 Trigger 3
283 - 268&nbsp;: Sideband signals HS2 STG X2 Trigger 1
299 - 284&nbsp;: Sideband signals HS2 STG X2 Trigger 2
315 - 300&nbsp;: Sideband signals HS2 STG X2 Trigger 3
</pre>
</td></tr></tbody></table>
<a name="Digital_Signal_Processor_Address_Map_.28Address_bits_11-0.29:" id="Digital_Signal_Processor_Address_Map_.28Address_bits_11-0.29:"></a><h2> <span class="mw-headline"> Digital Signal Processor Address Map (Address bits 11-0): </span></h2>
<table class="wikitable" border="0" cellpadding="10" cellspacing="1">

<tbody><tr>
<td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Mailbox to DSP</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x000 - 0xFFC: Mailbox Registers</td><td colspan="32"> write will generate an Interrupt on GP 6 Line
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
</td></tr></tbody></table>
<p><br>
</p>
<a name="Headstage_Board_Address_Map_.28Address_bits_11-0.29:" id="Headstage_Board_Address_Map_.28Address_bits_11-0.29:"></a><h2> <span class="mw-headline"> Headstage Board Address Map (Address bits 11-0): </span></h2>
<table class="wikitable" border="0" cellpadding="10" cellspacing="1">

<tbody><tr>
<td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>General Purpose Registers (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x000: Device ID Register</td><td colspan="32"> 0x00000002 = MEA 21 Headstage FPGA
</td></tr>
<tr>
<td>0x004: HW/FPGA Version Register</td><td colspan="16"> HW/Board Version </td><td colspan="16"> FPGA Version: 0x0101 = Initial Version
</td></tr>
<tr>
<td>0x008&nbsp;: Configuration Register</td><td colspan="26"> Reserved </td><td colspan="6"> Additional Boards attached, What kind of board?, ... <sup>*
</sup></td></tr>
<tr>
<td>0x00c&nbsp;: Channel Limit</td><td colspan="24"> Reserved </td><td colspan="8"> Number of supported analog channels
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td><sup>*</sup>Decoding Table:
</td><td>
</td></tr>
<tr>
<td>
<pre>0: 2 x 60 MEA
1: 1 x 60 MEA
2: 1 x 120 MEA
3: special
</pre>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>GTP Registers (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x010: GTP CTRL Register</td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x014: (RO)GTP Error counter Register</td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x014: (WO)GTP Error counter Reset</td><td colspan="32"> Reserved
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Reset Register (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x020: FPGA Reset</td><td colspan="29"> Reserved </td><td colspan="1"> STG X2 Reset </td><td colspan="1"> STG X1 Reset </td><td colspan="1"> FPGA Reset
</td></tr>
<tr>
<td>0x024: Power Enable</td><td colspan="31"> Reserved </td><td colspan="1"> Trafo
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Flash Memory Registers (should be implemented in/for every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x030: (WO)EEPRom Instruction Code Register</td><td colspan="23"> Reserved </td><td colspan="1"> Fifo Reset </td><td colspan="8"> Instruction Code
</td></tr>
<tr>
<td>0x030: (RO)EEPRom Status Register</td><td colspan="21"> Reserved  </td><td colspan="1"> FIFO_empty </td><td colspan="1"> FIFO_full </td><td colspan="1"> Statemachine busy </td><td colspan="8"> Flash Status Register
</td></tr>
<tr>
<td>0x034&nbsp;: EEPRom Memory Address Register</td><td colspan="8"> Reserved </td><td colspan="24"> Flash Address
</td></tr>
<tr>
<td>0x038&nbsp;: EEPRom Data FIFO Register</td><td colspan="32"> 256 Data Bytes in 64 DWords to/from Flash
</td></tr>
<tr>
<td>0x03C&nbsp;: EEPROM HW configuration register </td><td colspan="2"> Address length (1,2,3 Bytes)</td><td colspan="30"> Clock Divider Register (Multiples of 2 divide 38,4 MHz)
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>ADC Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x100: ADC Control Register</td><td colspan="1"> Reset done? </td><td colspan="1"> Artif. Data </td><td colspan="1"> Force data keep </td><td colspan="2"> Reserved </td><td colspan="1"> Enable Data keep on Measurement channels, post filter </td><td colspan="1"> Enable Data keep on Measurement channels, mid filter </td><td colspan="1"> Enable Data keep on Measurement channels, pre filter </td><td colspan="5"> Reserved </td><td colspan="1"> Enable Data keep on Stimulation channels, post filter </td><td colspan="1"> Enable Data keep on Stimulation channels, mid filter </td><td colspan="1"> Enable Data keep on Stimulation channels, pre filter  </td><td colspan="1"> Offset correction Enable </td><td colspan="1"> Learn DC offsets </td><td colspan="9"> Reserved </td><td colspan="1"> Filter 4 enable  </td><td colspan="1"> Filter 3 enable  </td><td colspan="1"> Filter 2 enable </td><td colspan="1"> Filter 1 enable </td><td colspan="1"> Start Stop
</td></tr>
<tr>
<td>0x104: Enable ADCs</td><td colspan="17"> Reserved </td><td colspan="15"> ADC 15 - 1
</td></tr>
<tr>
<td>0x108: Enable input switches</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 30 - 1
</td></tr>
<tr>
<td>0x10C: Enable input switches</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 60 - 31
</td></tr>
<tr>
<td>0x110: Enable input switches</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 90 - 61
</td></tr>
<tr>
<td>0x114: Enable input switches</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 119 - 91
</td></tr>
<tr>
<td>0x118: Sampling Rate</td><td colspan="14"> Reserved </td><td colspan="2"> Clock Settings </td><td colspan="14"> Reserved </td><td colspan="1"> 25.6 CLK Enable </td><td colspan="1"> SCLK Enable
</td></tr>
<tr>
<td>0x11C: Filter and ADC Gain</td><td colspan="32"> Gain of Filter coefficient + ADC Gain for GUI SW configuration, default 0x8000 07D0; 2000 meaning 2.0
</td></tr>
<tr>
<td>0x140: Open Amplifier Protection Switch while Blanking</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 30 - 1
</td></tr>
<tr>
<td>0x144: Open Amplifier Protection Switch while Blanking</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 60 - 31
</td></tr>
<tr>
<td>0x148: Open Amplifier Protection Switch while Blanking</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 90 - 61
</td></tr>
<tr>
<td>0x14C: Open Amplifier Protection Switch while Blanking</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 119 - 91
</td></tr>
<tr>
<td>0x150: Enable Blanking</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 30 - 1
</td></tr>
<tr>
<td>0x154: Enable Blanking</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 60 - 31
</td></tr>
<tr>
<td>0x158: Enable Blanking</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 90 - 61
</td></tr>
<tr>
<td>0x15C: Enable Blanking</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 119 - 91
</td></tr>
<tr>
<td>0x160: Stimulus Data keep pre filter</td><td colspan="8"> Reserved </td><td colspan="8"> onset delay </td><td colspan="8"> Reserved </td><td colspan="8"> offset delay
</td></tr>
<tr>
<td>0x164: Stimulus Data keep mid filter</td><td colspan="8"> Reserved </td><td colspan="8"> onset delay </td><td colspan="8"> Reserved </td><td colspan="8"> offset delay
</td></tr>
<tr>
<td>0x168: Stimulus Data keep post filter</td><td colspan="8"> Reserved </td><td colspan="8"> onset delay </td><td colspan="8"> Reserved </td><td colspan="8"> offset delay
</td></tr>
<tr>
<td>0x170: Non-Stimulus Data keep pre filter</td><td colspan="8"> Reserved </td><td colspan="8"> onset delay </td><td colspan="8"> Reserved </td><td colspan="8"> offset delay
</td></tr>
<tr>
<td>0x174: Non-Stimulus Data keep mid filter</td><td colspan="8"> Reserved </td><td colspan="8"> onset delay </td><td colspan="8"> Reserved </td><td colspan="8"> offset delay
</td></tr>
<tr>
<td>0x178: Non-Stimulus Data keep post filter</td><td colspan="8"> Reserved </td><td colspan="8"> onset delay </td><td colspan="8"> Reserved </td><td colspan="8"> offset delay
</td></tr>
<tr>
<td>0x180: Channel Index</td><td colspan="24"> Reserved </td><td colspan="8"> Index used for Reg.: 0x184 - 0x188
</td></tr>
<tr>
<td>0x184: Current ADC Value</td><td colspan="8"> Reserved </td><td colspan="24"> Reflects the ADC Value of the channel selected in Reg. 0x180
</td></tr>
<tr>
<td>0x188: Current DC Channel offset</td><td colspan="8"> Reserved </td><td colspan="24"> Reflects the DC offset correction Value of the channel selected in Reg. 0x180
</td></tr>
<tr>
<td>0x1F0: Stimulation Channel copy</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 30 - 1 Reflects the STG Register 0x158 and 0x15C for monitoring if information is on HS
</td></tr>
<tr>
<td>0x1F4: Stimulation Channel copy</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 60 - 31
</td></tr>
<tr>
<td>0x1F8: Stimulation Channel copy</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 90 - 61
</td></tr>
<tr>
<td>0x1FC: Stimulation Channel copy</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 119 - 91
</td></tr>
<tr>
<td>0x600: Filter 1 coefficent b[0]</td><td colspan="32"> Filter coefficent b[0] as Q1.30 value
</td></tr>
<tr>
<td>0x608: Filter 1 coefficent b[1]</td><td colspan="32"> Filter coefficent b[1] as Q1.30 value
</td></tr>
<tr>
<td>0x60C: Filter 1 coefficent a[1]</td><td colspan="32"> Filter coefficent a[1] as Q1.30 value
</td></tr>
<tr>
<td>0x610: Filter 1 coefficent b[2]</td><td colspan="32"> Filter coefficent b[2] as Q1.30 value
</td></tr>
<tr>
<td>0x614: Filter 1 coefficent a[2]</td><td colspan="32"> Filter coefficent a[2] as Q1.30 value
</td></tr>
<tr>
<td>0x61C: Filter 1 CTRL</td><td colspan="29"> Reserved </td><td colspan="1"> Filter Blank Mode</td><td colspan="1"> Filter Blank Enable</td><td colspan="1"> Filter Enable
</td></tr>
<tr>
<td>0x620: Filter 2 coefficent b[0]</td><td colspan="32"> Filter coefficent b[0] as Q1.30 value
</td></tr>
<tr>
<td>0x628: Filter 2 coefficent b[1]</td><td colspan="32"> Filter coefficent b[1] as Q1.30 value
</td></tr>
<tr>
<td>0x62C: Filter 2 coefficent a[1]</td><td colspan="32"> Filter coefficent a[1] as Q1.30 value
</td></tr>
<tr>
<td>0x630: Filter 2 coefficent b[2]</td><td colspan="32"> Filter coefficent b[2] as Q1.30 value
</td></tr>
<tr>
<td>0x634: Filter 2 coefficent a[2]</td><td colspan="32"> Filter coefficent a[2] as Q1.30 value
</td></tr>
<tr>
<td>0x63C: Filter 2 CTRL</td><td colspan="29"> Reserved </td><td colspan="1"> Filter Blank Mode</td><td colspan="1"> Filter Blank Enable</td><td colspan="1"> Filter Enable
</td></tr>
<tr>
<td>0x640: Filter 3 coefficent b[0]</td><td colspan="32"> Filter coefficent b[0] as Q1.30 value
</td></tr>
<tr>
<td>0x648: Filter 3 coefficent b[1]</td><td colspan="32"> Filter coefficent b[1] as Q1.30 value
</td></tr>
<tr>
<td>0x64C: Filter 3 coefficent a[1]</td><td colspan="32"> Filter coefficent a[1] as Q1.30 value
</td></tr>
<tr>
<td>0x650: Filter 3 coefficent b[2]</td><td colspan="32"> Filter coefficent b[2] as Q1.30 value
</td></tr>
<tr>
<td>0x654: Filter 3 coefficent a[2]</td><td colspan="32"> Filter coefficent a[2] as Q1.30 value
</td></tr>
<tr>
<td>0x65C: Filter 3 CTRL</td><td colspan="29"> Reserved </td><td colspan="1"> Filter Blank Mode</td><td colspan="1"> Filter Blank Enable</td><td colspan="1"> Filter Enable
</td></tr>
<tr>
<td>0x660: Filter 4 coefficent b[0]</td><td colspan="32"> Filter coefficent b[0] as Q1.30 value
</td></tr>
<tr>
<td>0x668: Filter 4 coefficent b[1]</td><td colspan="32"> Filter coefficent b[1] as Q1.30 value
</td></tr>
<tr>
<td>0x66C: Filter 4 coefficent a[1]</td><td colspan="32"> Filter coefficent a[1] as Q1.30 value
</td></tr>
<tr>
<td>0x670: Filter 4 coefficent b[2]</td><td colspan="32"> Filter coefficent b[2] as Q1.30 value
</td></tr>
<tr>
<td>0x674: Filter 4 coefficent a[2]</td><td colspan="32"> Filter coefficent a[2] as Q1.30 value
</td></tr>
<tr>
<td>0x67C: Filter 4 CTRL</td><td colspan="29"> Reserved </td><td colspan="1"> Filter Blank Mode</td><td colspan="1"> Filter Blank Enable</td><td colspan="1"> Filter Enable
</td></tr>
<tr>
<td>0x6A0: Filter 2 coefficent b2[0]</td><td colspan="32"> Filter coefficent b2[0] as Q1.30 value for one clock after blank
</td></tr>
<tr>
<td>0x6A8: Filter 2 coefficent b2[1]</td><td colspan="32"> Filter coefficent b2[1] as Q1.30 value for one clock after blank
</td></tr>
<tr>
<td>0x6AC: Filter 2 coefficent a2[1]</td><td colspan="32"> Filter coefficent a2[1] as Q1.30 value for one clock after blank
</td></tr>
<tr>
<td>0x6A0: Filter 2 coefficent b2[2]</td><td colspan="32"> Filter coefficent b2[2] as Q1.30 value for one clock after blank
</td></tr>
<tr>
<td>0x6A4: Filter 2 coefficent a2[2]</td><td colspan="32"> Filter coefficent a2[2] as Q1.30 value for one clock after blank
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>EEProm Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x300: (WO)EEPRom Instruction Code Register</td><td colspan="23"> Reserved </td><td colspan="1"> Fifo Reset </td><td colspan="8"> Instruction Code
</td></tr>
<tr>
<td>0x300: (RO)EEPRom Status Register</td><td colspan="21"> Reserved  </td><td colspan="1"> FIFO_empty </td><td colspan="1"> FIFO_full </td><td colspan="1"> Statemachine busy </td><td colspan="8"> Flash Status Register
</td></tr>
<tr>
<td>0x304&nbsp;: EEPRom Memory Address Register</td><td colspan="8"> Reserved </td><td colspan="24"> Flash Address
</td></tr>
<tr>
<td>0x308&nbsp;: EEPRom Data FIFO Register</td><td colspan="32"> 256 Data Bytes in 64 DWords to/from Flash
</td></tr>
<tr>
<td>0x30C&nbsp;: EEPROM HW configuration register </td><td colspan="4"> Address length (1,2,3 Bytes)</td><td colspan="28"> Clock Divider Register (Multiples of 2 divide 38,4 MHz)
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Mini DMA Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0xE00: DMA CTRL Register</td><td colspan="31"> Reserved </td><td colspan="1"> DMA Enable
</td></tr>
<tr>
<td>0xE04&nbsp;: EEPRom Address Ptr. Register</td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0xE08&nbsp;: EEPRom Data Ptr. Register</td><td colspan="16"> Reserved </td><td colspan="16"> Reserved
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Mini DMA command overview</b></div>
<p></p></caption>

<tbody><tr>
<th>Command</th><th> Bit 31 to 24 </th><th> Bit 23 to 0 </th><th> Description
</th></tr>
<tr>
<td>STP</td><td colspan="1"> 0xFF </td><td colspan="1"> 0xXXXXXX </td><td colspan="1"> Stop DMA
</td></tr>
<tr>
<td>SDTA</td><td colspan="1"> 0x01 </td><td colspan="1"> 0x008RegAddr. </td><td colspan="1"> Store Next Data to Register Address
</td></tr>
<tr>
<td>DATA</td><td colspan="1"> 0xData </td><td colspan="1"> 0xData </td><td colspan="1"> Data expected after SDTA command
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Changed Register Information of Headstage FPGA</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> from </th><th> to </th><th> in Revision
</th></tr>
<tr>
<td>ADC Filter</td><td colspan="1"> 0x0120 - 0x0138 </td><td colspan="1"> 0x0600 - 0x0674 </td><td colspan="1"> 0.04
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
</td></tr></tbody></table>
<a name="Stimulus_Board_Address_Map_.28Address_bits_11-0.29:" id="Stimulus_Board_Address_Map_.28Address_bits_11-0.29:"></a><h2> <span class="mw-headline"> Stimulus Board Address Map (Address bits 11-0): </span></h2>
<table class="wikitable" border="0" cellpadding="10" cellspacing="1">

<tbody><tr>
<td> Acess time is 2,6 us for writes and 6 us for reads.
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>General Purpose Registers (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x000: Device ID Register</td><td colspan="32"> 0x00000003 = MEA 21 Stimulus FPGA
</td></tr>
<tr>
<td>0x004: HW/FPGA Version Register</td><td colspan="12"> Reserved </td><td colspan="4"> HW/Board Version </td><td colspan="16"> FPGA Version: 0x0101 = Initial Version
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>SPI Registers (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x010: SPI CTRL Register</td><td colspan="32"> Reserved
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Reset Register (should be implemented in every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x020: FPGA Reset (WO)</td><td colspan="29"> Reserved </td><td colspan="1"> DDR Block Reset </td><td colspan="1"> DDR clk Reset </td><td colspan="1"> FPGA Reset
</td></tr>
<tr>
<td>0x024: FPGA Reset Status (RO)</td><td colspan="29"> Reserved </td><td colspan="1"> DDR Block PLL Locked </td><td colspan="1"> PLL Locked </td><td colspan="1"> System Reset
</td></tr>
<tr>
<td>0x028: System Pll CTRL (WO)</td><td colspan="30"> Reserved </td><td colspan="1"> Decrement Phase </td><td colspan="1"> Increment Phase
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Flash Memory Registers (should be implemented in/for every Device)</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x030: (WO)EEPRom Instruction Code Register</td><td colspan="23"> Reserved </td><td colspan="1"> Fifo Reset </td><td colspan="8"> Instruction Code
</td></tr>
<tr>
<td>0x030: (RO)EEPRom Status Register</td><td colspan="21"> Reserved  </td><td colspan="1"> FIFO_empty </td><td colspan="1"> FIFO_full </td><td colspan="1"> Statemachine busy </td><td colspan="8"> Flash Status Register
</td></tr>
<tr>
<td>0x034&nbsp;: EEPRom Memory Address Register</td><td colspan="8"> Reserved </td><td colspan="24"> Flash Address
</td></tr>
<tr>
<td>0x038&nbsp;: EEPRom Data FIFO Register</td><td colspan="32"> 256 Data Bytes in 64 DWords to/from Flash
</td></tr>
<tr>
<td>0x03C&nbsp;: EEPROM Clock Divider Register</td><td colspan="32"> Multiples of 2 divide 38,4 MHz
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<div id="DAC_Registers"></div>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>DAC Registers</b></div>
<p></p></caption>

<tbody><tr>
<th width="300">Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x100: DAC Control Register</td><td colspan="18"> Reserved </td><td colspan="1"> 0:&nbsp;Current  1:&nbsp;Voltage DAC: F</td><td colspan="1"> 0:&nbsp;Current  1:&nbsp;Voltage DAC: E</td><td colspan="1"> 0:&nbsp;Current  1:&nbsp;Voltage DAC: D</td><td colspan="1"> 0:&nbsp;Current  1:&nbsp;Voltage DAC: C</td><td colspan="1"> 0:&nbsp;Current  1:&nbsp;Voltage DAC: B</td><td colspan="1"> 0:&nbsp;Current  1:&nbsp;Voltage DAC: A</td><td colspan="3"> Reserved </td><td colspan="1"> DAC Test </td><td colspan="2"> Reserved </td><td colspan="1"> DAC data source (0 intern, 1 DSP stream) </td><td colspan="1"> Start Stop
</td></tr>
<tr>
<td>0x104: Trigger select* for Stim MEM FSM</td><td colspan="6"> Reserved </td><td colspan="2"> Mem 7</td><td colspan="6"> Reserved </td><td colspan="2"> Mem 5</td><td colspan="6"> Reserved </td><td colspan="2"> Mem 3</td><td colspan="6"> Reserved </td><td colspan="2"> Mem 1
</td></tr>
<tr>
<td>0x108: Trigger select* for Stim MEM FSM</td><td colspan="6"> Reserved </td><td colspan="2"> Mem 8</td><td colspan="6"> Reserved </td><td colspan="2"> Mem 6</td><td colspan="6"> Reserved </td><td colspan="2"> Mem 4</td><td colspan="6"> Reserved </td><td colspan="2"> Mem 2
</td></tr>
<tr>
<td>0x10C: Stop Trigger Register</td><td colspan="29"> Reserved </td><td colspan="3"> Stop Trigger 3-2-1
</td></tr>
<tr>
<td>0x110: Trigger conf. Register**</td><td colspan="24"> Reserved </td><td colspan="8"> Trigger 1
</td></tr>
<tr>
<td>0x114: Trigger conf. Register**</td><td colspan="24"> Reserved </td><td colspan="8"> Trigger 2
</td></tr>
<tr>
<td>0x118: Trigger conf. Register**</td><td colspan="24"> Reserved </td><td colspan="8"> Trigger 3
</td></tr>
<tr>
<td>0x11C: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x120: Electrode Mode</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 15 - 1 (Manual mode: 11 / Automatic mode: 00 , other bit combinations are reserved )
</td></tr>
<tr>
<td>0x124: Electrode Mode</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 30 - 16
</td></tr>
<tr>
<td>0x128: Electrode Mode</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 45 - 31
</td></tr>
<tr>
<td>0x12C: Electrode Mode</td><td colspan="2"> Reserved </td><td colspan="30"> Electrode 60 - 46
</td></tr>
<tr>
<td>0x130: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x134: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x138: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x13C: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x140: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x144: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x148: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x14C: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x150: Electr. conf. ID CTRL f. Auto</td><td colspan="1"> Reserved </td><td colspan="3"> Electrode configuration source 0:int/1:ext </td><td colspan="20"> Reserved </td><td colspan="8"> Electrode Config ID
</td></tr>
<tr>
<td>0x154: DAC Sideband Select***</td><td colspan="6"> Reserved </td><td colspan="2"> DAC F </td><td colspan="2"> Reserved </td><td colspan="2"> DAC D </td><td colspan="2"> Reserved </td><td colspan="2"> DAC B </td><td colspan="6"> Reserved </td><td colspan="2"> DAC E </td><td colspan="2"> Reserved </td><td colspan="2"> DAC C </td><td colspan="2"> Reserved </td><td colspan="2"> DAC A
</td></tr>
<tr>
<td>0x158: Stimulation Enable </td><td colspan="2"> Reserved </td><td colspan="30"> Electr. 30 -  1 (Segment ID depending on bits 7:0 of reg. 0x150)
</td></tr>
<tr>
<td>0x15C: Stimulation Enable </td><td colspan="2"> Reserved </td><td colspan="30"> Electr. 60 - 31 (Segment ID depending on bits 7:0 of reg. 0x150)
</td></tr>
<tr>
<td>0x160: Electrode DAC select**** </td><td colspan="2"> Reserved </td><td colspan="30"> Electr. 15 -  1 (Segment ID depending on bits 7:0 of reg. 0x150)
</td></tr>
<tr>
<td>0x164: Electrode DAC select**** </td><td colspan="2"> Reserved </td><td colspan="30"> Electr. 30 - 16 (Segment ID depending on bits 7:0 of reg. 0x150)
</td></tr>
<tr>
<td>0x168: Electrode DAC select**** </td><td colspan="2"> Reserved </td><td colspan="30"> Electr. 45 - 31 (Segment ID depending on bits 7:0 of reg. 0x150)
</td></tr>
<tr>
<td>0x16C: Electrode DAC select**** </td><td colspan="2"> Reserved </td><td colspan="30"> Electr. 60 - 46 (Segment ID depending on bits 7:0 of reg. 0x150)
</td></tr>
<tr>
<td>0x170: Event Cnt. Max val</td><td colspan="32"> Trigger 1
</td></tr>
<tr>
<td>0x174: Event Cnt. Max val</td><td colspan="32"> Trigger 2
</td></tr>
<tr>
<td>0x178: Event Cnt. Max val</td><td colspan="32"> Trigger 3
</td></tr>
<tr>
<td>0x17C: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x180: Event Cnt. Cur. val</td><td colspan="32"> Trigger 1
</td></tr>
<tr>
<td>0x184: Event Cnt. Cur. val</td><td colspan="32"> Trigger 2
</td></tr>
<tr>
<td>0x188: Event Cnt. Cur. val</td><td colspan="32"> Trigger 3
</td></tr>
<tr>
<td>0x18C: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x190: Repeat Trigger # times</td><td colspan="32"> Trigger 1
</td></tr>
<tr>
<td>0x194: Repeat Trigger # times</td><td colspan="32"> Trigger 2
</td></tr>
<tr>
<td>0x198: Repeat Trigger # times</td><td colspan="32"> Trigger 3
</td></tr>
<tr>
<td>0x19C: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x1A0: Repeat times counter</td><td colspan="32"> Trigger 1
</td></tr>
<tr>
<td>0x1A4: Repeat times counter</td><td colspan="32"> Trigger 2
</td></tr>
<tr>
<td>0x1A8: Repeat times counter</td><td colspan="32"> Trigger 3
</td></tr>
<tr>
<td>0x1AC: Reserved </td><td colspan="32"> Reserved
</td></tr>
<tr>
<td>0x1B0: Read Ptr. Cur. pos.</td><td colspan="32"> Stim 1
</td></tr>
<tr>
<td>0x1B4: Read Ptr. Cur. pos.</td><td colspan="32"> Stim 2
</td></tr>
<tr>
<td>0x1B8: Read Ptr. Cur. pos.</td><td colspan="32"> Stim 3
</td></tr>
<tr>
<td>0x1BC: Read Ptr. Cur. pos.</td><td colspan="32"> Stim 4
</td></tr>
<tr>
<td>0x1C0: Read Ptr. Cur. pos.</td><td colspan="32"> Stim 5
</td></tr>
<tr>
<td>0x1C4: Read Ptr. Cur. pos.</td><td colspan="32"> Stim 6
</td></tr>
<tr>
<td>0x1C8: Read Ptr. Cur. pos.</td><td colspan="32"> Stim 7
</td></tr>
<tr>
<td>0x1CC: Read Ptr. Cur. pos.</td><td colspan="32"> Stim 8
</td></tr>
<tr>
<td>0x1D0: DAC Data Source select*****</td><td colspan="4"> Reserved </td><td colspan="4"> DAC F </td><td colspan="4"> DAC D </td><td colspan="4"> DAC B </td><td colspan="4"> Reserved </td><td colspan="4"> DAC E </td><td colspan="4"> DAC C </td><td colspan="4"> DAC A
</td></tr>
<tr>
<td>0x1D4: SBS Data Source select*****</td><td colspan="20"> Reserved </td><td colspan="4"> SBS 3 </td><td colspan="4"> SBS 2 </td><td colspan="4"> SBS 1
</td></tr>
<tr>
<td>0x1E0: DAC Weighting Factor</td><td colspan="14"> Reserved </td><td colspan="18"> DAC A
</td></tr>
<tr>
<td>0x1E4: DAC Weighting Factor</td><td colspan="14"> Reserved </td><td colspan="32"> DAC C
</td></tr>
<tr>
<td>0x1E8: DAC Weighting Factor</td><td colspan="14"> Reserved </td><td colspan="32"> DAC E
</td></tr>
<tr>
<td>0x1F0: DAC Weighting Factor</td><td colspan="14"> Reserved </td><td colspan="32"> DAC B
</td></tr>
<tr>
<td>0x1F4: DAC Weighting Factor</td><td colspan="14"> Reserved </td><td colspan="32"> DAC D
</td></tr>
<tr>
<td>0x1F8: DAC Weighting Factor</td><td colspan="14"> Reserved </td><td colspan="32"> DAC F
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td> SBS: Side Band Signal
</td></tr>
<tr>
<td><sup>*</sup>Decoding Table:
</td><td>
</td></tr>
<tr>
<td>
<pre> 00: Trigger 1
 01: Trigger 2
 10: Trigger 3
 11: Reserved
</pre>
<p><sup>**</sup>Decoding Table:
</p>
<pre> Bit 0: Enable Trigger: not Armed -&gt; Armed
 Bit 3:1:
       0: Stop stimulus sequence at recuring of same trigger event
       1: Restart stimulus sequence at recuring of same trigger event
       2: Ignore same trigger and continue processing
       3: Gate stimulus sequence at trigger event
 Bit 5:4:
       0: Stop stimulus sequence at occuring of other trigger event
       1: Restart stimulus sequence at occuring of other trigger event
       2: Ignore other trigger and continue processing
 bit 7-6: Status of Trigger statemachine (00: not Armed, 01: Armed, 10: Triggerd (running), 11: Reserved)
</pre>
<p><sup>***</sup>Decoding Table:
</p>
<pre> 00: SBS 1
 01: SBS 2
 10: SBS 3
 11: Reserved, not Valid
</pre>
<p><sup>****</sup>Decoding Table:
</p>
<pre> 00: GND
 01: DAC A/B
 10: DAC C/D
 11: DAC E/F
</pre>
<p><sup>*****</sup>Decoding Table:
</p>
<pre> 0000: Stimmulus 1 Data Stream
 0001: Stimmulus 2 Data Stream
 0010: Stimmulus 3 Data Stream
 0011: Stimmulus 4 Data Stream
 0100: Stimmulus 5 Data Stream
 0101: Stimmulus 6 Data Stream
 0110: Stimmulus 7 Data Stream
 0111: Stimmulus 8 Data Stream
</pre>
</td></tr>
<tr>
<td>
<div id="Memory_Registers"></div>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Stimulus Pattern Memory Pointer Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x200: MEM Control Stim 1</td><td colspan="2"> Reserved </td><td colspan="1"> Init Ptr all** </td><td colspan="1"> Init Ptr Seg.0** </td><td colspan="20"> Reserved </td><td colspan="8"> Segment Selector*
</td></tr>
<tr>
<td>0x204: Start Pointer Stim 1</td><td colspan="32"> Memory Pointer (DAC A and B select this Data source in reg. 0x1D0 by default)
</td></tr>
<tr>
<td>0x208: End Pointer Stim 1</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x20C: Write Pointer Stim 1</td><td colspan="32"> Memory Pointer, write will clear Channel
</td></tr>
<tr>
<td>0x210: Read Pointer Stim 1</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x220: MEM Control Stim 2</td><td colspan="24"> Reserved </td><td colspan="8"> Segment Selector*
</td></tr>
<tr>
<td>0x224: Start Pointer Stim 2</td><td colspan="32"> Memory Pointer (SBS 1 select this Data source in reg. 0x1D4 by default)
</td></tr>
<tr>
<td>0x228: End Pointer Stim 2</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x22C: Write Pointer Stim 2</td><td colspan="32"> Memory Pointer, write will clear Channel
</td></tr>
<tr>
<td>0x230: Read Pointer Stim 2</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x240: MEM Control Stim 3</td><td colspan="24"> Reserved </td><td colspan="8"> Segment Selector*
</td></tr>
<tr>
<td>0x244: Start Pointer Stim 3</td><td colspan="32"> Memory Pointer (DAC C and D select this Data source in reg. 0x1D0 by default)
</td></tr>
<tr>
<td>0x248: End Pointer Stim 3</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x24C: Write Pointer Stim 3</td><td colspan="32"> Memory Pointer, write will clear Channel
</td></tr>
<tr>
<td>0x250: Read Pointer Stim 3</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x260: MEM Control Stim 4</td><td colspan="24"> Reserved </td><td colspan="8"> Segment Selector*
</td></tr>
<tr>
<td>0x264: Start Pointer Stim 4</td><td colspan="32"> Memory Pointer (SBS 2 select this Data source in reg. 0x1D4 by default)
</td></tr>
<tr>
<td>0x268: End Pointer Stim 4</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x26C: Write Pointer Stim 4</td><td colspan="32"> Memory Pointer, write will clear Channel
</td></tr>
<tr>
<td>0x270: Read Pointer Stim 4</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x280: MEM Control Stim 5</td><td colspan="24"> Reserved </td><td colspan="8"> Segment Selector*
</td></tr>
<tr>
<td>0x284: Start Pointer Stim 5</td><td colspan="32"> Memory Pointer (DAC E and F select this Data source in reg. 0x1D0 by default)
</td></tr>
<tr>
<td>0x288: End Pointer Stim 5</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x28C: Write Pointer Stim 5</td><td colspan="32"> Memory Pointer, write will clear Channel
</td></tr>
<tr>
<td>0x290: Read Pointer Stim 5</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x2A0: MEM Control Stim 6</td><td colspan="24"> Reserved </td><td colspan="8"> Segment Selector*
</td></tr>
<tr>
<td>0x2A4: Start Pointer Stim 6</td><td colspan="32"> Memory Pointer  (SBS 3 select this Data source in reg. 0x1D4 by default)
</td></tr>
<tr>
<td>0x2A8: End Pointer Stim 6</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x2AC: Write Pointer Stim 6</td><td colspan="32"> Memory Pointer, write will clear Channel
</td></tr>
<tr>
<td>0x2B0: Read Pointer Stim 6</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x2C0: MEM Control Stim 7</td><td colspan="24"> Reserved </td><td colspan="8"> Segment Selector*
</td></tr>
<tr>
<td>0x2C4: Start Pointer Stim 7</td><td colspan="32"> Memory Pointer (unused by default)
</td></tr>
<tr>
<td>0x2C8: End Pointer Stim 7</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x2CC: Write Pointer Stim 7</td><td colspan="32"> Memory Pointer, write will clear Channel
</td></tr>
<tr>
<td>0x2D0: Read Pointer Stim 7</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x2E0: MEM Control Stim 8</td><td colspan="24"> Reserved </td><td colspan="8"> Segment Selector*
</td></tr>
<tr>
<td>0x2E4: Start Pointer Stim 8</td><td colspan="32"> Memory Pointer (unused by default)
</td></tr>
<tr>
<td>0x2E8: End Pointer Stim 8</td><td colspan="32"> Memory Pointer
</td></tr>
<tr>
<td>0x2EC: Write Pointer Stim 8</td><td colspan="32"> Memory Pointer, write will clear Channel
</td></tr>
<tr>
<td>0x2F0: Read Pointer Stim 8</td><td colspan="32"> Memory Pointer
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p><sup>*</sup>Segments:
</p>
<pre> Segment 0 to 255 reflect the Segment ID 0 to 255 of Trigger
</pre>
<p><sup>**</sup>Initialisation:
</p>
<pre> Poll Bit after writing a '1' until it is '0' to wait on end of request!
</pre>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>EEProm Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x300: (WO)EEPRom Instruction Code Register</td><td colspan="23"> Reserved </td><td colspan="1"> Fifo Reset </td><td colspan="8"> Instruction Code
</td></tr>
<tr>
<td>0x300: (RO)EEPRom Status Register</td><td colspan="21"> Reserved  </td><td colspan="1"> FIFO_empty </td><td colspan="1"> FIFO_full </td><td colspan="1"> Statemachine busy </td><td colspan="8"> Flash Status Register
</td></tr>
<tr>
<td>0x304&nbsp;: EEPRom Memory Address Register</td><td colspan="8"> Reserved </td><td colspan="24"> Flash Address
</td></tr>
<tr>
<td>0x308&nbsp;: EEPRom Data FIFO Register</td><td colspan="32"> 256 Data Bytes in 64 DWords to/from Flash
</td></tr>
<tr>
<td>0x30C&nbsp;: EEPROM HW configuration register </td><td colspan="4"> Address length (1,2,3 Bytes)</td><td colspan="28"> Clock Divider Register (Multiples of 2 divide 38,4 MHz)
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Memory Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x400: MEM Test Status Register</td><td colspan="14"> Reserved </td><td colspan="1"> MEM Test read/write in process </td><td colspan="1"> MEM Test failed </td><td colspan="5"> Reserved </td><td colspan="1"> MEM statemachine busy </td><td colspan="10"> Reserved
</td></tr>
<tr>
<td>0x404: MEM Test Register</td><td colspan="13"> Reserved </td><td colspan="1"> Stop Test </td><td colspan="1"> MEM Statemachine start </td><td colspan="1"> Write/notRead </td><td colspan="8"> Reserved</td><td colspan="8"> Patternmode*
</td></tr>
<tr>
<td>0x408: MEM Pattern Register</td><td colspan="32"> Pattern
</td></tr>
<tr>
<td>0x40C: MEM Test Fail Counter Register</td><td colspan="32"> # of data compare fails (writes clear value)
</td></tr>
<tr>
<td>0x410: MEM Test Address Ptr. Register</td><td colspan="2"> Reserved </td><td colspan="30"> Reflects the address Pointer to see the progress of the test (max Value: h"0FFFFF80")
</td></tr>
<tr>
<td>0x414: First Fail Address Ptr. Register</td><td colspan="2"> Reserved </td><td colspan="30"> Reflects the address Pointer of the first failed address of mem test
</td></tr>
<tr>
<td>0x420: MEM Status Register</td><td colspan="22"> Reserved </td><td colspan="1"> MEM cal done (RO)</td><td colspan="1"> selfref. mode (RO) </td><td colspan="7"> Reserved </td><td colspan="1"> selfref. enter
</td></tr>
</tbody></table>
<p><sup>*</sup>Pattermode options:
</p>
<pre> 0: Counter
 1: Pattern
 2: Shift Pattern right
 3: Shift Pattern left
 4: Toggle Pattern after every write
</pre>
<p><br>
</p><p><br>
</p>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>DAC HW Configuration Registers</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> 31 </th><th> 30 </th><th> 29 </th><th> 28 </th><th> 27 </th><th> 26 </th><th> 25 </th><th> 24 </th><th> 23 </th><th> 22 </th><th> 21 </th><th> 20 </th><th>19 </th><th> 18 </th><th> 17 </th><th> 16 </th><th> 15 </th><th> 14 </th><th> 13 </th><th> 12 </th><th> 11 </th><th> 10 </th><th> 9 </th><th> 8 </th><th> 7 </th><th> 6 </th><th> 5 </th><th> 4 </th><th> 3 </th><th> 2 </th><th> 1 </th><th> 0
</th></tr>
<tr>
<td>0x500: Voltage Range Reg. </td><td colspan="32"> Value; Default: 0x0000 2EE0 (12000 mV)
</td></tr>
<tr>
<td>0x504: Voltage Resolution Reg. </td><td colspan="32"> Value; Default: 0x8000 023B (571 uV)
</td></tr>
<tr>
<td>0x508: Current Range Reg. </td><td colspan="32"> Value; Default: 0x0000 05DC (1500 uA)
</td></tr>
<tr>
<td>0x50C: Current Resolution Reg. </td><td colspan="32"> Value; Default: 0x0000 0032 (50 nA)
</td></tr>
<tr>
<td>0x520: DAC Offset correction </td><td colspan="16"> Reserved </td><td colspan="16"> DAC A offset
</td></tr>
<tr>
<td>0x524: DAC Offset correction </td><td colspan="16"> Reserved </td><td colspan="16"> DAC C offset
</td></tr>
<tr>
<td>0x528: DAC Offset correction </td><td colspan="16"> Reserved </td><td colspan="16"> DAC E offset
</td></tr>
<tr>
<td>0x530: DAC Offset correction </td><td colspan="16"> Reserved </td><td colspan="16"> DAC B offset
</td></tr>
<tr>
<td>0x534: DAC Offset correction </td><td colspan="16"> Reserved </td><td colspan="16"> DAC D offset
</td></tr>
<tr>
<td>0x538: DAC Offset correction </td><td colspan="16"> Reserved </td><td colspan="16"> DAC F offset
</td></tr>
</tbody></table>
<p><br>
</p>
</td><td>
</td></tr>
<tr>
<td> <div id="Memory_Access"></div>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>Memory Access</b></div>
<p></p></caption>

<tbody><tr>
<th>Register</th><th> Byte 4 </th><th> Byte 3 </th><th> Byte 2 </th><th> Byte 1
</th></tr>
<tr>
<td>0xF00: MEM Write Address Register</td><td colspan="4"> MEM Address(RW)
</td></tr>
<tr>
<td>0xF04: MEM Data Register</td><td colspan="4"> Write Data (WO), Read Data(RO)
</td></tr>
<tr>
<td>0xF08 - 0xF1C: Reserved</td><td colspan="8"> Reserved
</td></tr>
<tr>
<td>0xF20: Write Stim 1 Data Register</td><td colspan="4"> Channel 0 Data Vector*
</td></tr>
<tr>
<td>0xF24: Write Stim 2 Data Register</td><td colspan="4"> Channel 1 Data Vector*
</td></tr>
<tr>
<td>0xF28: Write Stim 3 Data Register</td><td colspan="4"> Channel 2 Data Vector*
</td></tr>
<tr>
<td>0xF2C: Write Stim 4 Data Register</td><td colspan="4"> Channel 3 Data Vector*
</td></tr>
<tr>
<td>0xF30: Write Stim 5 Data Register</td><td colspan="4"> Channel 4 Data Vector*
</td></tr>
<tr>
<td>0xF34: Write Stim 6 Data Register</td><td colspan="4"> Channel 5 Data Vector*
</td></tr>
<tr>
<td>0xF38: Write Stim 7 Data Register</td><td colspan="4"> Channel 6 Data Vector*
</td></tr>
<tr>
<td>0xF3C: Write Stim 8 Data Register</td><td colspan="4"> Channel 7 Data Vector*
</td></tr>
<tr>
<td>0xF40: Clear and Write Stim 1 Data Register</td><td colspan="4"> Channel 0 Data Vector*
</td></tr>
<tr>
<td>0xF44: Clear and Write Stim 2 Data Register</td><td colspan="4"> Channel 1 Data Vector*
</td></tr>
<tr>
<td>0xF48: Clear and Write Stim 3 Data Register</td><td colspan="4"> Channel 2 Data Vector*
</td></tr>
<tr>
<td>0xF4C: Clear and Write Stim 4 Data Register</td><td colspan="4"> Channel 3 Data Vector*
</td></tr>
<tr>
<td>0xF50: Clear and Write Stim 5 Data Register</td><td colspan="4"> Channel 4 Data Vector*
</td></tr>
<tr>
<td>0xF54: Clear and Write Stim 6 Data Register</td><td colspan="4"> Channel 5 Data Vector*
</td></tr>
<tr>
<td>0xF58: Clear and Write Stim 7 Data Register</td><td colspan="4"> Channel 6 Data Vector*
</td></tr>
<tr>
<td>0xF5C: Clear and Write Stim 8 Data Register</td><td colspan="4"> Channel 7 Data Vector*
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
<div id="Sideband_Signals"></div>
<p>Sideband Data:
</p>
<pre>Bit 0: Amplifier Protection Switch on Headstage/Blanking
Bit 3: Stimulation Switch
Bit 4: Stimulus Selector 
</pre>
<div id="Data_Vector_decoding"></div>
<p><sup>*</sup>Data Vector decoding:
</p>
<pre> Bit 31: Reserved
 Bit 30 - 28:
     000: DAC/SBS Data Vector
     001: Loopptr. Vector
     010: Long Loop Ptr. Vector
     011: Long Loop Ctr. Vector
     100: Reserved
     ...
     110 Reserved
     111 END Command
</pre>
<pre>  DAC/SBS Data Vector(000):
  Bit 27: Reserved
  Bit 26: Repeat Timebase (0: 20 us, 1: 1000*20us)
  Bit 25 - 16: Number of Repeats (0: Pattern is used 1x Timebase; 1: Pattern is used for 2x Timebase
  Bit 15 - 0&nbsp;: DAC data value (unsigned 16 bit value, 0x8000 is zero level) / SBS data value
      SBS Bit 0   &nbsp;: Amplifier Protection Switch/Blanking
      SBS Bit 3   &nbsp;: Stimulation Switch
      SBS Bit 4   &nbsp;: Stimulus Select
      SBS Bit 8-15&nbsp;: Electrode Config ID
</pre>
<pre>  Loop Ptr. Vector(001):
  Bit 27 - 26: Loop Level
  Bit 25 - 16: Number of Repeats (2: Vectors are repeated once, thus used twice)
  Bit 15 - 0&nbsp;: Address Offset (Number of Vectors to jump backward, 1: One Vector before the LoopPtr is repeated)
</pre>
<pre>  Long Loop Ptr. Vector(010):
  Bit 27 - 0&nbsp;: Address Offset (Number of Vectors to jump backward)
</pre>
<pre>  Long Loop Ctr. Vector(011):
  Bit 27 - 0&nbsp;: Number of Repeats
</pre>
<pre>  End Command(111):
  Bit 27 - 0&nbsp;: Reserved
</pre>
</td></tr></tbody></table>
<a name="HS_.3C-.3E_STG_interconection_.28bits_32-0.29" id="HS_.3C-.3E_STG_interconection_.28bits_32-0.29"></a><h1> <span class="mw-headline"> HS &lt;-&gt; STG interconection (bits 32-0) </span></h1>
<table class="wikitable" border="0" cellpadding="10" cellspacing="1">

<tbody><tr>
<td>
</td></tr>
<tr>
<td>
<p></p><table align="left" border="1" cellpadding="5" cellspacing="0">
<caption> <div align="left"><b>STG HS connector</b></div>
<p></p></caption>

<tbody><tr>
<th>Pin</th><th>Name</th><th>Bit</th><th>HS FPGA Pin </th><th> Function </th><th> to FPGA: STG FPGA Pin
</th></tr>
<tr>
<td> 3  </td><td> STG01 </td><td> 0 </td><td colspan="1"> V1 </td><td colspan="1"> Reset </td><td colspan="1">  X2
</td></tr>
<tr>
<td> 4  </td><td> STG02 </td><td> 1 </td><td colspan="1"> V2 </td><td colspan="1"> Suspend </td><td colspan="1">  X2
</td></tr>
<tr>
<td> 5  </td><td> STG03 </td><td> 2 </td><td colspan="1"> T3 </td><td colspan="1"> Reserved </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 6  </td><td> STG04 </td><td> 3 </td><td colspan="1"> U1 </td><td colspan="1"> Reserved </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 7  </td><td> STG05 </td><td> 4 </td><td colspan="1"> T1 </td><td colspan="1"> Reserved </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 8  </td><td> STG06 </td><td> 5 </td><td colspan="1"> V3 </td><td colspan="1"> Reserved </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 9  </td><td> STG07 </td><td> 6 </td><td colspan="1"> P3 </td><td colspan="1"> Reserved </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 10 </td><td> STG08 </td><td> 7 </td><td colspan="1"> R1 </td><td colspan="1"> Blanking </td><td colspan="1">  X2
</td></tr>
<tr>
<td> 11 </td><td> STG09 </td><td> 8 </td><td colspan="1"> V3 </td><td colspan="1"> 50 kHz Impulse </td><td colspan="1">  X2
</td></tr>
<tr>
<td> 12 </td><td> STG10 </td><td> 9 </td><td colspan="1"> W1 </td><td colspan="1"> SPI: read data ready </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 13 </td><td> STG11 </td><td> 10 </td><td colspan="1"> Y1 </td><td colspan="1"> SPI: SCLK </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 14 </td><td> STG12 </td><td> 11 </td><td colspan="1"> Y2 </td><td colspan="1"> SPI: CS </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 15 </td><td> STG13 </td><td> 12 </td><td colspan="1"> W3 </td><td colspan="1"> SPI: MOSI </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 16 </td><td> STG14 </td><td> 13 </td><td colspan="1"> AA1 </td><td colspan="1"> SPI: MISO </td><td colspan="1"> X2
</td></tr>
<tr>
<td> 17 </td><td> STG15 </td><td> 14 </td><td colspan="1"> AA2 </td><td colspan="1"> 25.6 MHz clock </td><td colspan="1"> X1,X2
</td></tr>
<tr>
<td> 18 </td><td> STG16 </td><td> 15 </td><td colspan="1"> Y3 </td><td colspan="1"> 400 kHz Power sync. </td><td colspan="1"> X1,X2
</td></tr>
<tr>
<td> 19 </td><td> STG17 </td><td> 16 </td><td colspan="1"> H6 </td><td colspan="1"> 400 kHz Power sync. </td><td colspan="1"> X1,X2
</td></tr>
<tr>
<td> 20 </td><td> STG18 </td><td> 17 </td><td colspan="1"> H4 </td><td colspan="1"> 38.4 MHz clock </td><td colspan="1"> X1,X2
</td></tr>
<tr>
<td> 21 </td><td> STG19 </td><td> 18 </td><td colspan="1"> G3 </td><td colspan="1"> Reset </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 22 </td><td> STG20 </td><td> 19 </td><td colspan="1"> H8 </td><td colspan="1"> Suspend </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 23 </td><td> STG21 </td><td> 20 </td><td colspan="1"> G6 </td><td colspan="1"> Reserved </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 24 </td><td> STG22 </td><td> 21 </td><td colspan="1"> G4 </td><td colspan="1"> Reserved </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 25 </td><td> STG23 </td><td> 22 </td><td colspan="1"> F5 </td><td colspan="1"> Reserved </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 26 </td><td> STG24 </td><td> 23 </td><td colspan="1"> G7 </td><td colspan="1"> Reserved </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 27 </td><td> STG25 </td><td> 24 </td><td colspan="1"> H5 </td><td colspan="1"> Reserved </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 28 </td><td> STG26 </td><td> 25 </td><td colspan="1"> J7 </td><td colspan="1"> Blanking </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 29 </td><td> STG27 </td><td> 26 </td><td colspan="1"> J3 </td><td colspan="1"> 50 kHz </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 30 </td><td> STG28 </td><td> 27 </td><td colspan="1"> J4 </td><td colspan="1"> SPI: read data ready </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 31 </td><td> STG29 </td><td> 28 </td><td colspan="1"> J6 </td><td colspan="1"> SPI: SCLK </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 32 </td><td> STG30 </td><td> 29 </td><td colspan="1"> K4 </td><td colspan="1"> SPI: CS </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 33 </td><td> STG31 </td><td> 30 </td><td colspan="1"> K5 </td><td colspan="1"> SPI: MOSI </td><td colspan="1"> X1
</td></tr>
<tr>
<td> 34 </td><td> STG32 </td><td> 31 </td><td colspan="1"> K6 </td><td colspan="1"> SPI: MISO </td><td colspan="1"> X1
</td></tr>
</tbody></table>
</td><td>
</td></tr>
<tr>
<td>
</td></tr></tbody></table>

<!-- 
NewPP limit report
Preprocessor node count: 98/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key wikidb:pcache:idhash:2046-0!1!0!!en!2!printable=1 and timestamp 20120725165038 -->
<div class="printfooter">
Retrieved from "<a href="http://wiki.mcs.de.com/wiki/index.php/MEA2100_User_Guide">http://wiki.mcs.de.com/wiki/index.php/MEA2100_User_Guide</a>"</div>
						<!-- end content -->
						<div class="visualClear"></div>
		</div>
	</div>
		</div>
		<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
	
				 <li id="ca-nstab-main" class="selected"><a href="http://wiki.mcs.de.com/wiki/index.php/MEA2100_User_Guide" title="View the content page [alt-c]" accesskey="c">Page</a></li>
				 <li id="ca-talk" class="new"><a href="http://wiki.mcs.de.com/wiki/index.php?title=Talk:MEA2100_User_Guide&amp;action=edit&amp;redlink=1" title="Discussion about the content page [alt-t]" accesskey="t">Discussion</a></li>
				 <li id="ca-edit"><a href="http://wiki.mcs.de.com/wiki/index.php?title=MEA2100_User_Guide&amp;action=edit" title="You can edit this page. Please use the preview button before saving [alt-e]" accesskey="e">Edit</a></li>
				 <li id="ca-history"><a href="http://wiki.mcs.de.com/wiki/index.php?title=MEA2100_User_Guide&amp;action=history" title="Past revisions of this page [alt-h]" accesskey="h">History</a></li>			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-anonuserpage"><a href="http://wiki.mcs.de.com/wiki/index.php/User:192.168.10.14" title="The user page for the IP address you are editing as [alt-.]" accesskey="." class="new">192.168.10.14</a></li>
				<li id="pt-anontalk"><a href="http://wiki.mcs.de.com/wiki/index.php/User_talk:192.168.10.14" title="Discussion about edits from this IP address [alt-n]" accesskey="n" class="new">Talk for this IP</a></li>
				<li id="pt-anonlogin"><a href="http://wiki.mcs.de.com/wiki/index.php?title=Special:UserLogin&amp;returnto=MEA2100_User_Guide" title="You are encouraged to log in; however, it is not mandatory [alt-o]" accesskey="o">Log in / create account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
		<a style="background-image: url(/wiki/skins/common/images/mcs_logo.png);" href="http://wiki.mcs.de.com/wiki/index.php/Main_Page" title="Visit the main page [alt-z]" accesskey="z"></a>
	</div>
	<script type="text/javascript"> if (window.isMSIE55) fixalpha(); </script>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/wiki/index.php" id="searchform"><div>
				<input name="title" value="Special:Search" type="hidden">
				<input id="searchInput" name="search" title="Search McsWiki [alt-f]" accesskey="f" type="text">
				<input name="go" class="searchButton" id="searchGoButton" value="Go" title="Go to a page with this exact name if exists" type="submit">&nbsp;
				<input name="fulltext" class="searchButton" id="mw-searchButton" value="Search" title="Search the pages for this text" type="submit">
			</div></form>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-Navigation">
		<h5>Navigation</h5>
		<div class="pBody">
			<ul>
				<li id="n-mainpage"><a href="http://wiki.mcs.de.com/wiki/index.php/Multi_Channel_Systems_Wiki" title="Visit the main page">Main Page</a></li>
				<li id="n-Seiten.C3.BCbersicht"><a href="http://wiki.mcs.de.com/wiki/index.php/Special:AllPages">Seitenübersicht</a></li>
				<li id="n-Kategorien"><a href="http://wiki.mcs.de.com/wiki/index.php/Special:Categories">Kategorien</a></li>
				<li id="n-Letzte-.C3.84nderungen"><a href="http://wiki.mcs.de.com/wiki/index.php/Special:RecentChanges">Letzte Änderungen</a></li>
				<li id="n-Zuf.C3.A4llige-Seite"><a href="http://wiki.mcs.de.com/wiki/index.php/Special:Random">Zufällige Seite</a></li>
			</ul>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-Wichtige_Wiki_Seiten">
		<h5>Wichtige Wiki Seiten</h5>
		<div class="pBody">
			<ul>
				<li id="n-Telefonliste"><a href="http://wiki.mcs.de.com/wiki/index.php/Telefonliste">Telefonliste</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="http://wiki.mcs.de.com/wiki/index.php/Special:WhatLinksHere/MEA2100_User_Guide" title="List of all wiki pages that link here [alt-j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="http://wiki.mcs.de.com/wiki/index.php/Special:RecentChangesLinked/MEA2100_User_Guide" title="Recent changes in pages linked from this page [alt-k]" accesskey="k">Related changes</a></li>
<li id="t-specialpages"><a href="http://wiki.mcs.de.com/wiki/index.php/Special:SpecialPages" title="List of all special pages [alt-q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="http://wiki.mcs.de.com/wiki/index.php?title=MEA2100_User_Guide&amp;printable=yes&amp;printable=yes" rel="alternate" title="Printable version of this page [alt-p]" accesskey="p">Printable version</a></li>				<li id="t-permalink"><a href="http://wiki.mcs.de.com/wiki/index.php?title=MEA2100_User_Guide&amp;oldid=11149" title="Permanent link to this revision of the page">Permanent link</a></li>			</ul>
		</div>
	</div>
		</div><!-- end of the left (by default at least) column -->
			<div class="visualClear"></div>
			<div id="footer">
				<div id="f-poweredbyico"><a href="http://www.mediawiki.org/"><img src="MEA2100_User_Guide-Dateien/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki"></a></div>
			<ul id="f-list">
					<li id="lastmod"> This page was last modified on 23 July 2012, at 07:34.</li>
					<li id="viewcount">This page has been accessed 810 times.</li>
					<li id="privacy"><a href="http://wiki.mcs.de.com/wiki/index.php/McsWiki:Privacy_policy" title="McsWiki:Privacy policy">Privacy policy</a></li>
					<li id="about"><a href="http://wiki.mcs.de.com/wiki/index.php/McsWiki:About" title="McsWiki:About">About McsWiki</a></li>
					<li id="disclaimer"><a href="http://wiki.mcs.de.com/wiki/index.php/McsWiki:General_disclaimer" title="McsWiki:General disclaimer">Disclaimers</a></li>
			</ul>
		</div>
</div>

		<script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
<!-- Served in 0.791 secs. -->
</body></html>